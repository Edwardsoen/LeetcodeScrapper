{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n5"], ["0 - 6 months", "Amazon\n4"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Walmart Global Tech\n2"], ["0 - 6 months", "PhonePe\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Adobe\n5"], ["6 months - 1 year", "Google\n3"], ["6 months - 1 year", "Apple\n3"], ["6 months - 1 year", "Facebook\n2"], ["6 months - 1 year", "IBM\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "TikTok\n8"], ["1 year - 2 years", "Hotstar\n7"], ["1 year - 2 years", "Goldman Sachs\n5"], ["1 year - 2 years", "Uber\n4"], ["1 year - 2 years", "Flipkart\n4"], ["1 year - 2 years", "C3 IoT\n4"], ["1 year - 2 years", "ByteDance\n3"], ["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Accolite\n2"], ["1 year - 2 years", "TuSimple\n2"]]}], "problem": "<p>There are <code>n</code> gas stations along a circular route, where the amount of gas at the <code>i<sup>th</sup></code> station is <code>gas[i]</code>.</p>\n\n<p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from the <code>i<sup>th</sup></code> station to its next <code>(i + 1)<sup>th</sup></code> station. You begin the journey with an empty tank at one of the gas stations.</p>\n\n<p>Given two integer arrays <code>gas</code> and <code>cost</code>, return <em>the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return</em> <code>-1</code>. If there exists a solution, it is <strong>guaranteed</strong> to be <strong>unique</strong></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nStart at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> gas = [2,3,4], cost = [3,4,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nYou can't start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can't travel around the circuit once no matter where you start.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == gas.length == cost.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= gas[i], cost[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Greedy"], "similarQuestions": [{"questionName": "Maximize the Topmost Element After K Moves", "difficulty": "Medium"}], "problemName": "gas-station"}