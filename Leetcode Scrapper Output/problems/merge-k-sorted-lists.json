{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n28"], ["0 - 6 months", "Facebook\n3"], ["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "Uber\n2"], ["0 - 6 months", "Bloomberg\n2"], ["0 - 6 months", "Zillow\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n8"], ["6 months - 1 year", "ByteDance\n6"], ["6 months - 1 year", "VMware\n4"], ["6 months - 1 year", "Walmart Global Tech\n4"], ["6 months - 1 year", "Indeed\n3"], ["6 months - 1 year", "LinkedIn\n3"], ["6 months - 1 year", "Goldman Sachs\n2"], ["6 months - 1 year", "Yandex\n2"], ["6 months - 1 year", "Shopee\n2"], ["6 months - 1 year", "TikTok\n2"], ["6 months - 1 year", "Sprinklr\n2"], ["6 months - 1 year", "Media.net\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "eBay\n4"], ["1 year - 2 years", "Oracle\n4"], ["1 year - 2 years", "Yahoo\n4"], ["1 year - 2 years", "Qualtrics\n4"], ["1 year - 2 years", "Cruise Automation\n3"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Lyft\n2"], ["1 year - 2 years", "Cisco\n2"], ["1 year - 2 years", "Twitter\n2"], ["1 year - 2 years", "Salesforce\n2"], ["1 year - 2 years", "Nvidia\n2"], ["1 year - 2 years", "Zoom\n2"], ["1 year - 2 years", "TuSimple\n2"], ["1 year - 2 years", "Airbnb"], ["1 year - 2 years", "IXL"]]}], "problem": "<p>You are given an array of <code>k</code> linked-lists <code>lists</code>, each linked-list is sorted in ascending order.</p>\n\n<p><em>Merge all the linked-lists into one sorted linked-list and return it.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> lists = [[1,4,5],[1,3,4],[2,6]]\n<strong>Output:</strong> [1,1,2,3,4,4,5,6]\n<strong>Explanation:</strong> The linked-lists are:\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\nmerging them into one sorted list:\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> lists = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> lists = [[]]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>k == lists.length</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= lists[i].length &lt;= 500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= lists[i][j] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>lists[i]</code> is sorted in <strong>ascending order</strong>.</li>\n\t<li>The sum of <code>lists[i].length</code> will not exceed <code>10<sup>4</sup></code>.</li>\n</ul>\n", "relatedTopics": ["Linked List", "Divide and Conquer", "Heap (Priority Queue)", "Merge Sort"], "similarQuestions": [{"questionName": "Merge Two Sorted Lists", "difficulty": "Easy"}, {"questionName": "Ugly Number II", "difficulty": "Medium"}, {"questionName": "Smallest Subarrays With Maximum Bitwise OR", "difficulty": "Medium"}], "problemName": "merge-k-sorted-lists"}