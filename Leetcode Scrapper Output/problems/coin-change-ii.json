{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n6"], ["0 - 6 months", "Bloomberg\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Microsoft\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Apple\n6"], ["1 year - 2 years", "Adobe\n5"], ["1 year - 2 years", "Citadel\n4"], ["1 year - 2 years", "Facebook\n3"], ["1 year - 2 years", "Cisco\n3"], ["1 year - 2 years", "ByteDance\n3"], ["1 year - 2 years", "Goldman Sachs\n3"], ["1 year - 2 years", "tcs\n3"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Zenefits\n2"], ["1 year - 2 years", "Flipkart\n2"]]}], "problem": "<p>You are given an integer array <code>coins</code> representing coins of different denominations and an integer <code>amount</code> representing a total amount of money.</p>\n\n<p>Return <em>the number of combinations that make up that amount</em>. If that amount of money cannot be made up by any combination of the coins, return <code>0</code>.</p>\n\n<p>You may assume that you have an infinite number of each kind of coin.</p>\n\n<p>The answer is <strong>guaranteed</strong> to fit into a signed <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> amount = 5, coins = [1,2,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> amount = 3, coins = [2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> the amount of 3 cannot be made up just with coins of 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> amount = 10, coins = [10]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= coins.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= coins[i] &lt;= 5000</code></li>\n\t<li>All the values of <code>coins</code> are <strong>unique</strong>.</li>\n\t<li><code>0 &lt;= amount &lt;= 5000</code></li>\n</ul>\n", "relatedTopics": ["Array", "Dynamic Programming"], "similarQuestions": [{"questionName": "Maximum Value of K Coins From Piles", "difficulty": "Hard"}], "problemName": "coin-change-ii"}