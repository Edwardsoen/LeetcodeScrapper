{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n24"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "Facebook\n3"], ["0 - 6 months", "Uber\n2"], ["0 - 6 months", "Coupang\n2"], ["0 - 6 months", "Adobe\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n8"], ["6 months - 1 year", "TikTok\n8"], ["6 months - 1 year", "Apple\n5"], ["6 months - 1 year", "ByteDance\n4"], ["6 months - 1 year", "Bloomberg\n3"], ["6 months - 1 year", "Intuit\n3"], ["6 months - 1 year", "Coinbase\n3"], ["6 months - 1 year", "Salesforce\n2"], ["6 months - 1 year", "Palantir Technologies\n2"], ["6 months - 1 year", "Citadel\n2"], ["6 months - 1 year", "Wayfair\n2"], ["6 months - 1 year", "Twitch\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Oracle\n7"], ["1 year - 2 years", "Twilio\n5"], ["1 year - 2 years", "Snapchat\n4"], ["1 year - 2 years", "Karat\n4"], ["1 year - 2 years", "Robinhood\n4"], ["1 year - 2 years", "DoorDash\n3"], ["1 year - 2 years", "eBay\n3"], ["1 year - 2 years", "Splunk\n3"], ["1 year - 2 years", "Wish\n3"], ["1 year - 2 years", "Zillow\n3"], ["1 year - 2 years", "Tesla\n3"], ["1 year - 2 years", "Qualtrics\n3"], ["1 year - 2 years", "HBO\n2"], ["1 year - 2 years", "C3 IoT\n2"], ["1 year - 2 years", "Nvidia\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "Yelp"], ["1 year - 2 years", "Zenefits"]]}], "problem": "<p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses - 1</code>. You are given an array <code>prerequisites</code> where <code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that you <strong>must</strong> take course <code>b<sub>i</sub></code> first if you want to take course <code>a<sub>i</sub></code>.</p>\n\n<ul>\n\t<li>For example, the pair <code>[0, 1]</code>, indicates that to take course <code>0</code> you have to first take course <code>1</code>.</li>\n</ul>\n\n<p>Return <code>true</code> if you can finish all courses. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0. So it is possible.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> numCourses = 2, prerequisites = [[1,0],[0,1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= numCourses &lt;= 2000</code></li>\n\t<li><code>0 &lt;= prerequisites.length &lt;= 5000</code></li>\n\t<li><code>prerequisites[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; numCourses</code></li>\n\t<li>All the pairs prerequisites[i] are <strong>unique</strong>.</li>\n</ul>\n", "relatedTopics": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similarQuestions": [], "problemName": "course-schedule"}