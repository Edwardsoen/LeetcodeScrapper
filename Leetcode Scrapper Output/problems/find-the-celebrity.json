{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n7"], ["6 months - 1 year", "LinkedIn\n6"], ["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Pinterest\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Apple\n9"], ["1 year - 2 years", "Facebook\n4"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Goldman Sachs\n2"]]}], "problem": "<p>Suppose you are at a party with <code>n</code> people labeled from <code>0</code> to <code>n - 1</code> and among them, there may exist one celebrity. The definition of a celebrity is that all the other <code>n - 1</code> people know the celebrity, but the celebrity does not know any of them.</p>\n\n<p>Now you want to find out who the celebrity is or verify that there is not one. You are only allowed to ask questions like: \"Hi, A. Do you know B?\" to get information about whether A knows B. You need to find out the celebrity (or verify there is not one) by asking as few questions as possible (in the asymptotic sense).</p>\n\n<p>You are given a helper function <code>bool knows(a, b)</code> that tells you whether <code>a</code> knows <code>b</code>. Implement a function <code>int findCelebrity(n)</code>. There will be exactly one celebrity if they are at the party.</p>\n\n<p>Return <em>the celebrity's label if there is a celebrity at the party</em>. If there is no celebrity, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/01/19/g1.jpg\" style=\"width: 224px; height: 145px;\">\n<pre><strong>Input:</strong> graph = [[1,1,0],[0,1,0],[1,1,1]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> There are three persons labeled with 0, 1 and 2. graph[i][j] = 1 means person i knows person j, otherwise graph[i][j] = 0 means person i does not know person j. The celebrity is the person labeled as 1 because both 0 and 2 know him but 1 does not know anybody.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/01/19/g2.jpg\" style=\"width: 224px; height: 145px;\">\n<pre><strong>Input:</strong> graph = [[1,0,1],[1,1,0],[0,1,1]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no celebrity.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length == graph[i].length</code></li>\n\t<li><code>2 &lt;= n &lt;= 100</code></li>\n\t<li><code>graph[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n\t<li><code>graph[i][i] == 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> If the maximum number of allowed calls to the API <code>knows</code> is <code>3 * n</code>, could you find a solution without exceeding the maximum number of calls?</p>\n", "relatedTopics": ["Two Pointers", "Greedy", "Graph", "Interactive"], "similarQuestions": [{"questionName": "Find the Town Judge", "difficulty": "Easy"}], "problemName": "find-the-celebrity"}