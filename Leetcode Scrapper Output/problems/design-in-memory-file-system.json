{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n6"], ["0 - 6 months", "Citadel\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Coinbase\n22"], ["6 months - 1 year", "Microsoft\n10"], ["6 months - 1 year", "DoorDash\n7"], ["6 months - 1 year", "Salesforce\n4"], ["6 months - 1 year", "Goldman Sachs\n2"], ["6 months - 1 year", "Uber\n2"], ["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "Expedia\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Airbnb\n4"], ["1 year - 2 years", "Tesla\n3"], ["1 year - 2 years", "ByteDance\n2"], ["1 year - 2 years", "Yahoo\n2"], ["1 year - 2 years", "Baidu"]]}], "problem": "<p>Design a data structure that simulates an in-memory file system.</p>\n\n<p>Implement the FileSystem class:</p>\n\n<ul>\n\t<li><code>FileSystem()</code> Initializes the object of the system.</li>\n\t<li><code>List&lt;String&gt; ls(String path)</code>\n\t<ul>\n\t\t<li>If <code>path</code> is a file path, returns a list that only contains this file's name.</li>\n\t\t<li>If <code>path</code> is a directory path, returns the list of file and directory names <strong>in this directory</strong>.</li>\n\t</ul>\n\tThe answer should in <strong>lexicographic order</strong>.</li>\n\t<li><code>void mkdir(String path)</code> Makes a new directory according to the given <code>path</code>. The given directory path does not exist. If the middle directories in the path do not exist, you should create them as well.</li>\n\t<li><code>void addContentToFile(String filePath, String content)</code>\n\t<ul>\n\t\t<li>If <code>filePath</code> does not exist, creates that file containing given <code>content</code>.</li>\n\t\t<li>If <code>filePath</code> already exists, appends the given <code>content</code> to original content.</li>\n\t</ul>\n\t</li>\n\t<li><code>String readContentFromFile(String filePath)</code> Returns the content in the file at <code>filePath</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/28/filesystem.png\" style=\"width: 650px; height: 315px;\">\n<pre><strong>Input</strong>\n[\"FileSystem\", \"ls\", \"mkdir\", \"addContentToFile\", \"ls\", \"readContentFromFile\"]\n[[], [\"/\"], [\"/a/b/c\"], [\"/a/b/c/d\", \"hello\"], [\"/\"], [\"/a/b/c/d\"]]\n<strong>Output</strong>\n[null, [], null, null, [\"a\"], \"hello\"]\n\n<strong>Explanation</strong>\nFileSystem fileSystem = new FileSystem();\nfileSystem.ls(\"/\");                         // return []\nfileSystem.mkdir(\"/a/b/c\");\nfileSystem.addContentToFile(\"/a/b/c/d\", \"hello\");\nfileSystem.ls(\"/\");                         // return [\"a\"]\nfileSystem.readContentFromFile(\"/a/b/c/d\"); // return \"hello\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= path.length,&nbsp;filePath.length &lt;= 100</code></li>\n\t<li><code>path</code> and <code>filePath</code>&nbsp;are absolute paths which begin with <code>'/'</code>&nbsp;and do not end with <code>'/'</code>&nbsp;except that the path is just&nbsp;<code>\"/\"</code>.</li>\n\t<li>You can assume that all directory names and file names only contain lowercase letters, and the same names will not exist in the same directory.</li>\n\t<li>You can assume that all operations will be passed valid parameters, and users will not attempt to retrieve file content or list a directory or file that does not exist.</li>\n\t<li><code>1 &lt;= content.length &lt;= 50</code></li>\n\t<li>At most <code>300</code> calls will be made to <code>ls</code>, <code>mkdir</code>,&nbsp;<code>addContentToFile</code>, and&nbsp;<code>readContentFromFile</code>.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "String", "Design", "Trie"], "similarQuestions": [], "problemName": "design-in-memory-file-system"}