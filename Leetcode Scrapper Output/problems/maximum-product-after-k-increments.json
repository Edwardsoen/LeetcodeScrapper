{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Infosys"]]}], "problem": "<p>You are given an array of non-negative integers <code>nums</code> and an integer <code>k</code>. In one operation, you may choose <strong>any</strong> element from <code>nums</code> and <strong>increment</strong> it by <code>1</code>.</p>\n\n<p>Return<em> the <strong>maximum</strong> <strong>product</strong> of </em><code>nums</code><em> after <strong>at most</strong> </em><code>k</code><em> operations. </em>Since the answer may be very large, return it <b>modulo</b> <code>10<sup>9</sup> + 7</code>. Note that you should maximize the product before taking the modulo.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [0,4], k = 5\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> Increment the first number 5 times.\nNow nums = [5, 4], with a product of 5 * 4 = 20.\nIt can be shown that 20 is maximum product possible, so we return 20.\nNote that there may be other ways to increment nums to have the maximum product.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [6,3,3,2], k = 2\n<strong>Output:</strong> 216\n<strong>Explanation:</strong> Increment the second number 1 time and increment the fourth number 1 time.\nNow nums = [6, 4, 3, 3], with a product of 6 * 4 * 3 * 3 = 216.\nIt can be shown that 216 is maximum product possible, so we return 216.\nNote that there may be other ways to increment nums to have the maximum product.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length, k &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Greedy", "Heap (Priority Queue)"], "similarQuestions": [{"questionName": "Minimum Size Subarray Sum", "difficulty": "Medium"}, {"questionName": "Minimum Increment to Make Array Unique", "difficulty": "Medium"}, {"questionName": "Minimum Operations to Make the Array Increasing", "difficulty": "Easy"}], "problemName": "maximum-product-after-k-increments"}