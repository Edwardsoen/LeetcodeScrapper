{"tags": [], "problem": "<p>Suppose you are given the following code:</p>\n\n<pre>class FooBar {\n  public void foo() {\n    for (int i = 0; i &lt; n; i++) {\n      print(\"foo\");\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i &lt; n; i++) {\n      print(\"bar\");\n    }\n  }\n}\n</pre>\n\n<p>The same instance of <code>FooBar</code> will be passed to two different threads:</p>\n\n<ul>\n\t<li>thread <code>A</code> will call <code>foo()</code>, while</li>\n\t<li>thread <code>B</code> will call <code>bar()</code>.</li>\n</ul>\n\n<p>Modify the given program to output <code>\"foobar\"</code> <code>n</code> times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> \"foobar\"\n<strong>Explanation:</strong> There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar().\n\"foobar\" is being output 1 time.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> \"foobarfoobar\"\n<strong>Explanation:</strong> \"foobar\" is being output 2 times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n", "relatedTopics": ["Concurrency"], "similarQuestions": [{"questionName": "Print in Order", "difficulty": "Easy"}, {"questionName": "Print Zero Even Odd", "difficulty": "Medium"}], "problemName": "print-foobar-alternately"}