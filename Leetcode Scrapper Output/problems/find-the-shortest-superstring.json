{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Goldman Sachs\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "DE Shaw\n4"], ["1 year - 2 years", "Google\n2"], ["1 year - 2 years", "Amazon\n2"]]}], "problem": "<p>Given an array of strings <code>words</code>, return <em>the smallest string that contains each string in</em> <code>words</code> <em>as a substring</em>. If there are multiple valid strings of the smallest length, return <strong>any of them</strong>.</p>\n\n<p>You may assume that no string in <code>words</code> is a substring of another string in <code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"alex\",\"loves\",\"leetcode\"]\n<strong>Output:</strong> \"alexlovesleetcode\"\n<strong>Explanation:</strong> All permutations of \"alex\",\"loves\",\"leetcode\" would also be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"catg\",\"ctaagt\",\"gcta\",\"ttca\",\"atgcatc\"]\n<strong>Output:</strong> \"gctaagttcatgcatc\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>words</code> are <strong>unique</strong>.</li>\n</ul>\n", "relatedTopics": ["Array", "String", "Dynamic Programming", "Bit Manipulation", "Bitmask"], "similarQuestions": [{"questionName": "Maximum Rows Covered by Columns", "difficulty": "Medium"}], "problemName": "find-the-shortest-superstring"}