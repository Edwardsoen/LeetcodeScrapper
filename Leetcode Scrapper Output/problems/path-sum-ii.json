{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n4"], ["0 - 6 months", "DoorDash\n3"], ["0 - 6 months", "Zillow\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Bloomberg\n4"], ["6 months - 1 year", "Facebook\n2"], ["6 months - 1 year", "Adobe\n2"], ["6 months - 1 year", "Apple\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Microsoft\n6"], ["1 year - 2 years", "Google\n3"], ["1 year - 2 years", "Oracle\n2"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "ServiceNow\n2"]]}], "problem": "<p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <em>all <strong>root-to-leaf</strong> paths where the sum of the node values in the path equals </em><code>targetSum</code><em>. Each path should be returned as a list of the node <strong>values</strong>, not node references</em>.</p>\n\n<p>A <strong>root-to-leaf</strong> path is a path starting from the root and ending at any leaf node. A <strong>leaf</strong> is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg\" style=\"width: 500px; height: 356px;\">\n<pre><strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n<strong>Output:</strong> [[5,4,11,2],[5,8,4,5]]\n<strong>Explanation:</strong> There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\" style=\"width: 212px; height: 181px;\">\n<pre><strong>Input:</strong> root = [1,2,3], targetSum = 5\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> root = [1,2], targetSum = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n", "relatedTopics": ["Backtracking", "Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [], "problemName": "path-sum-ii"}