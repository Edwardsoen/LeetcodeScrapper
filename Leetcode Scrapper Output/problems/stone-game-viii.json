{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Infosys"]]}], "problem": "<p>Alice and Bob take turns playing a game, with <strong>Alice starting first</strong>.</p>\n\n<p>There are <code>n</code> stones arranged in a row. On each player's turn, while the number of stones is <strong>more than one</strong>, they will do the following:</p>\n\n<ol>\n\t<li>Choose an integer <code>x &gt; 1</code>, and <strong>remove</strong> the leftmost <code>x</code> stones from the row.</li>\n\t<li>Add the <strong>sum</strong> of the <strong>removed</strong> stones' values to the player's score.</li>\n\t<li>Place a <strong>new stone</strong>, whose value is equal to that sum, on the left side of the row.</li>\n</ol>\n\n<p>The game stops when <strong>only</strong> <strong>one</strong> stone is left in the row.</p>\n\n<p>The <strong>score difference</strong> between Alice and Bob is <code>(Alice's score - Bob's score)</code>. Alice's goal is to <strong>maximize</strong> the score difference, and Bob's goal is the <strong>minimize</strong> the score difference.</p>\n\n<p>Given an integer array <code>stones</code> of length <code>n</code> where <code>stones[i]</code> represents the value of the <code>i<sup>th</sup></code> stone <strong>from the left</strong>, return <em>the <strong>score difference</strong> between Alice and Bob if they both play <strong>optimally</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> stones = [-1,2,-3,4,-5]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\n- Alice removes the first 4 stones, adds (-1) + 2 + (-3) + 4 = 2 to her score, and places a stone of\n  value 2 on the left. stones = [2,-5].\n- Bob removes the first 2 stones, adds 2 + (-5) = -3 to his score, and places a stone of value -3 on\n  the left. stones = [-3].\nThe difference between their scores is 2 - (-3) = 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> stones = [7,-6,5,10,5,-2,-6]\n<strong>Output:</strong> 13\n<strong>Explanation:</strong>\n- Alice removes all stones, adds 7 + (-6) + 5 + 10 + 5 + (-2) + (-6) = 13 to her score, and places a\n  stone of value 13 on the left. stones = [13].\nThe difference between their scores is 13 - 0 = 13.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> stones = [-10,-12]\n<strong>Output:</strong> -22\n<strong>Explanation:</strong>\n- Alice can only make one move, which is to remove both stones. She adds (-10) + (-12) = -22 to her\n  score and places a stone of value -22 on the left. stones = [-22].\nThe difference between their scores is (-22) - 0 = -22.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == stones.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>", "relatedTopics": ["Array", "Math", "Dynamic Programming", "Prefix Sum", "Game Theory"], "similarQuestions": [{"questionName": "Stone Game", "difficulty": "Medium"}, {"questionName": "Stone Game II", "difficulty": "Medium"}, {"questionName": "Stone Game III", "difficulty": "Hard"}, {"questionName": "Stone Game IV", "difficulty": "Hard"}, {"questionName": "Stone Game V", "difficulty": "Hard"}, {"questionName": "Stone Game VI", "difficulty": "Medium"}, {"questionName": "Stone Game VII", "difficulty": "Medium"}, {"questionName": "Stone Game VIII", "difficulty": "Hard"}, {"questionName": "Stone Game IX", "difficulty": "Medium"}], "problemName": "stone-game-viii"}