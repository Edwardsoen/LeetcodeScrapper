{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "DoorDash\n5"], ["0 - 6 months", "TikTok\n4"], ["0 - 6 months", "Amazon\n3"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "Samsung\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n6"], ["6 months - 1 year", "Duolingo\n3"], ["6 months - 1 year", "Microsoft\n2"], ["6 months - 1 year", "Pinterest\n2"], ["6 months - 1 year", "Huawei\n2"], ["6 months - 1 year", "Qualtrics\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Snapchat\n7"], ["1 year - 2 years", "Apple\n6"], ["1 year - 2 years", "Adobe\n4"], ["1 year - 2 years", "ByteDance\n4"], ["1 year - 2 years", "Bloomberg\n3"], ["1 year - 2 years", "Oracle\n3"], ["1 year - 2 years", "Yahoo\n2"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "DE Shaw\n2"], ["1 year - 2 years", "Myntra\n2"]]}], "problem": "<p>Given an <code>m x n</code> integers <code>matrix</code>, return <em>the length of the longest increasing path in </em><code>matrix</code>.</p>\n\n<p>From each cell, you can either move in four directions: left, right, up, or down. You <strong>may not</strong> move <strong>diagonally</strong> or move <strong>outside the boundary</strong> (i.e., wrap-around is not allowed).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/05/grid1.jpg\" style=\"width: 242px; height: 242px;\">\n<pre><strong>Input:</strong> matrix = [[9,9,4],[6,6,8],[2,1,1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing path is <code>[1, 2, 6, 9]</code>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/27/tmp-grid.jpg\" style=\"width: 253px; height: 253px;\">\n<pre><strong>Input:</strong> matrix = [[3,4,5],[3,2,6],[2,2,1]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> matrix = [[1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n", "relatedTopics": ["Array", "Dynamic Programming", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort", "Memoization", "Matrix"], "similarQuestions": [{"questionName": "Number of Increasing Paths in a Grid", "difficulty": "Hard"}], "problemName": "longest-increasing-path-in-a-matrix"}