{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Apple\n3"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "TikTok\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Snapchat\n5"], ["6 months - 1 year", "Facebook\n4"], ["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Uber\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "DoorDash\n2"], ["1 year - 2 years", "Citadel\n2"], ["1 year - 2 years", "TuSimple\n2"], ["1 year - 2 years", "Jingchi"], ["1 year - 2 years", "Pocket Gems"], ["1 year - 2 years", "Hulu"], ["1 year - 2 years", "Houzz"]]}], "problem": "<p>Implement a basic calculator to evaluate a simple expression string.</p>\n\n<p>The expression string contains only non-negative integers, <code>'+'</code>, <code>'-'</code>, <code>'*'</code>, <code>'/'</code> operators, and open <code>'('</code> and closing parentheses <code>')'</code>. The integer division should <strong>truncate toward zero</strong>.</p>\n\n<p>You may assume that the given expression is always valid. All intermediate results will be in the range of <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>.</p>\n\n<p><strong>Note:</strong> You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as <code>eval()</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"1+1\"\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"6-4/2\"\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"2*(5+5*2)/3+(6/2+8)\"\n<strong>Output:</strong> 21\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of digits, <code>'+'</code>, <code>'-'</code>, <code>'*'</code>, <code>'/'</code>, <code>'('</code>,&nbsp;and&nbsp;<code>')'</code>.</li>\n\t<li><code>s</code> is a <strong>valid</strong> expression.</li>\n</ul>\n", "relatedTopics": ["Math", "String", "Stack", "Recursion"], "similarQuestions": [], "problemName": "basic-calculator-iii"}