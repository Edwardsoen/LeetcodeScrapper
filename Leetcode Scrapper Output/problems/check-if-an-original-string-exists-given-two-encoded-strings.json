{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Facebook\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "BitGo"]]}], "problem": "<p>An original string, consisting of lowercase English letters, can be encoded by the following steps:</p>\n\n<ul>\n\t<li>Arbitrarily <strong>split</strong> it into a <strong>sequence</strong> of some number of <strong>non-empty</strong> substrings.</li>\n\t<li>Arbitrarily choose some elements (possibly none) of the sequence, and <strong>replace</strong> each with <strong>its length</strong> (as a numeric string).</li>\n\t<li><strong>Concatenate</strong> the sequence as the encoded string.</li>\n</ul>\n\n<p>For example, <strong>one way</strong> to encode an original string <code>\"abcdefghijklmnop\"</code> might be:</p>\n\n<ul>\n\t<li>Split it as a sequence: <code>[\"ab\", \"cdefghijklmn\", \"o\", \"p\"]</code>.</li>\n\t<li>Choose the second and third elements to be replaced by their lengths, respectively. The sequence becomes <code>[\"ab\", \"12\", \"1\", \"p\"]</code>.</li>\n\t<li>Concatenate the elements of the sequence to get the encoded string: <code>\"ab121p\"</code>.</li>\n</ul>\n\n<p>Given two encoded strings <code>s1</code> and <code>s2</code>, consisting of lowercase English letters and digits <code>1-9</code> (inclusive), return <code>true</code><em> if there exists an original string that could be encoded as <strong>both</strong> </em><code>s1</code><em> and </em><code>s2</code><em>. Otherwise, return </em><code>false</code>.</p>\n\n<p><strong>Note</strong>: The test cases are generated such that the number of consecutive digits in <code>s1</code> and <code>s2</code> does not exceed <code>3</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"internationalization\", s2 = \"i18n\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> It is possible that \"internationalization\" was the original string.\n- \"internationalization\" \n  -&gt; Split:       [\"internationalization\"]\n  -&gt; Do not replace any element\n  -&gt; Concatenate:  \"internationalization\", which is s1.\n- \"internationalization\"\n  -&gt; Split:       [\"i\", \"nternationalizatio\", \"n\"]\n  -&gt; Replace:     [\"i\", \"18\",                 \"n\"]\n  -&gt; Concatenate:  \"i18n\", which is s2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"l123e\", s2 = \"44\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> It is possible that \"leetcode\" was the original string.\n- \"leetcode\" \n  -&gt; Split:      [\"l\", \"e\", \"et\", \"cod\", \"e\"]\n  -&gt; Replace:    [\"l\", \"1\", \"2\",  \"3\",   \"e\"]\n  -&gt; Concatenate: \"l123e\", which is s1.\n- \"leetcode\" \n  -&gt; Split:      [\"leet\", \"code\"]\n  -&gt; Replace:    [\"4\",    \"4\"]\n  -&gt; Concatenate: \"44\", which is s2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"a5b\", s2 = \"c5b\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible.\n- The original string encoded as s1 must start with the letter 'a'.\n- The original string encoded as s2 must start with the letter 'c'.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s1.length, s2.length &lt;= 40</code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of digits <code>1-9</code> (inclusive), and lowercase English letters only.</li>\n\t<li>The number of consecutive digits in <code>s1</code> and <code>s2</code> does not exceed <code>3</code>.</li>\n</ul>\n", "relatedTopics": ["String", "Dynamic Programming"], "similarQuestions": [], "problemName": "check-if-an-original-string-exists-given-two-encoded-strings"}