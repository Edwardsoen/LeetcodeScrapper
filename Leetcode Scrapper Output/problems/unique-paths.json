{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n9"], ["0 - 6 months", "Bloomberg\n4"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "TikTok\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Apple\n10"], ["6 months - 1 year", "Microsoft\n10"], ["6 months - 1 year", "Facebook\n7"], ["6 months - 1 year", "Yahoo\n3"], ["6 months - 1 year", "Infosys\n2"], ["6 months - 1 year", "Cruise Automation\n2"], ["6 months - 1 year", "Trilogy\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Zillow\n3"], ["1 year - 2 years", "ByteDance\n3"], ["1 year - 2 years", "Oracle\n3"], ["1 year - 2 years", "Expedia\n3"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "Goldman Sachs\n2"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Wish\n2"], ["1 year - 2 years", "Morgan Stanley\n2"], ["1 year - 2 years", "Zoho\n2"], ["1 year - 2 years", "Intuit\n2"]]}], "problem": "<p>There is a robot on an <code>m x n</code> grid. The robot is initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p>\n\n<p>Given the two integers <code>m</code> and <code>n</code>, return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n\n<p>The test cases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\" style=\"width: 400px; height: 183px;\">\n<pre><strong>Input:</strong> m = 3, n = 7\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n", "relatedTopics": ["Math", "Dynamic Programming", "Combinatorics"], "similarQuestions": [{"questionName": "Unique Paths II", "difficulty": "Medium"}, {"questionName": "Minimum Path Sum", "difficulty": "Medium"}, {"questionName": "Dungeon Game", "difficulty": "Hard"}, {"questionName": "Minimum Path Cost in a Grid", "difficulty": "Medium"}, {"questionName": "Minimum Cost Homecoming of a Robot in a Grid", "difficulty": "Medium"}, {"questionName": "Number of Ways to Reach a Position After Exactly k Steps", "difficulty": "Medium"}, {"questionName": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}], "problemName": "unique-paths"}