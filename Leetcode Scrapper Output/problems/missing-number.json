{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n6"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Adobe\n2"], ["0 - 6 months", "Facebook\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n13"], ["6 months - 1 year", "Bloomberg\n3"], ["6 months - 1 year", "Apple\n2"], ["6 months - 1 year", "Oracle\n2"], ["6 months - 1 year", "VMware\n2"], ["6 months - 1 year", "Nvidia\n2"], ["6 months - 1 year", "Snapchat\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Salesforce\n2"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Cisco\n2"], ["1 year - 2 years", "IBM\n2"], ["1 year - 2 years", "eBay\n2"], ["1 year - 2 years", "Intel\n2"], ["1 year - 2 years", "Capital One\n2"]]}], "problem": "<p>Given an array <code>nums</code> containing <code>n</code> distinct numbers in the range <code>[0, n]</code>, return <em>the only number in the range that is missing from the array.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [3,0,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [9,6,4,2,3,5,7,0,1]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= n</code></li>\n\t<li>All the numbers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you implement a solution using only <code>O(1)</code> extra space complexity and <code>O(n)</code> runtime complexity?</p>\n", "relatedTopics": ["Array", "Hash Table", "Math", "Binary Search", "Bit Manipulation", "Sorting"], "similarQuestions": [{"questionName": "First Missing Positive", "difficulty": "Hard"}, {"questionName": "Single Number", "difficulty": "Easy"}, {"questionName": "Find the Duplicate Number", "difficulty": "Medium"}, {"questionName": "Couples Holding Hands", "difficulty": "Hard"}, {"questionName": "Find Unique Binary String", "difficulty": "Medium"}], "problemName": "missing-number"}