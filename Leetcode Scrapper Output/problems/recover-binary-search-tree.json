{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n4"], ["0 - 6 months", "Bloomberg\n3"], ["0 - 6 months", "Microsoft\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Media.net\n8"], ["6 months - 1 year", "Apple\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Adobe\n6"], ["1 year - 2 years", "Google\n3"], ["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "Roblox\n2"]]}], "problem": "<p>You are given the <code>root</code> of a binary search tree (BST), where the values of <strong>exactly</strong> two nodes of the tree were swapped by mistake. <em>Recover the tree without changing its structure</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg\" style=\"width: 422px; height: 302px;\">\n<pre><strong>Input:</strong> root = [1,3,null,null,2]\n<strong>Output:</strong> [3,1,null,null,2]\n<strong>Explanation:</strong> 3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg\" style=\"width: 581px; height: 302px;\">\n<pre><strong>Input:</strong> root = [3,1,4,null,null,2]\n<strong>Output:</strong> [2,1,4,null,null,3]\n<strong>Explanation:</strong> 2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[2, 1000]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> A solution using <code>O(n)</code> space is pretty straight-forward. Could you devise a constant <code>O(1)</code> space solution?", "relatedTopics": [], "similarQuestions": [], "problemName": "recover-binary-search-tree"}