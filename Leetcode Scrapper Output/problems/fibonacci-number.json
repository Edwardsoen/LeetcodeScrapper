{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "JPMorgan\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n12"], ["6 months - 1 year", "Google\n7"], ["6 months - 1 year", "Spotify\n4"], ["6 months - 1 year", "Infosys\n4"], ["6 months - 1 year", "Oracle\n3"], ["6 months - 1 year", "Qualcomm\n2"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "Morgan Stanley\n2"], ["6 months - 1 year", "Zoom\n2"], ["6 months - 1 year", "tcs\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Facebook\n8"], ["1 year - 2 years", "Zillow\n6"], ["1 year - 2 years", "eBay\n4"], ["1 year - 2 years", "Goldman Sachs\n4"], ["1 year - 2 years", "Deloitte\n2"]]}], "problem": "<p>The <b>Fibonacci numbers</b>, commonly denoted <code>F(n)</code> form a sequence, called the <b>Fibonacci sequence</b>, such that each number is the sum of the two preceding ones, starting from <code>0</code> and <code>1</code>. That is,</p>\n\n<pre>F(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2), for n &gt; 1.\n</pre>\n\n<p>Given <code>n</code>, calculate <code>F(n)</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> F(2) = F(1) + F(0) = 1 + 0 = 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> F(3) = F(2) + F(1) = 1 + 1 = 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> n = 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> F(4) = F(3) + F(2) = 2 + 1 = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 30</code></li>\n</ul>\n", "relatedTopics": ["Math", "Dynamic Programming", "Recursion", "Memoization"], "similarQuestions": [{"questionName": "Climbing Stairs", "difficulty": "Easy"}, {"questionName": "Split Array into Fibonacci Sequence", "difficulty": "Medium"}, {"questionName": "Length of Longest Fibonacci Subsequence", "difficulty": "Medium"}, {"questionName": "N-th Tribonacci Number", "difficulty": "Easy"}], "problemName": "fibonacci-number"}