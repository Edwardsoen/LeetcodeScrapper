{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google"]]}], "problem": "<p>A <strong><a href=\"https://en.wikipedia.org/wiki/Binary_expression_tree\" target=\"_blank\">binary expression tree</a></strong> is a kind of binary tree used to represent arithmetic expressions. Each node of a binary expression tree has either zero or two children. Leaf nodes (nodes with 0 children) correspond to operands (variables), and internal nodes (nodes with two children) correspond to the operators. In this problem, we only consider the <code>'+'</code> operator (i.e. addition).</p>\n\n<p>You are given the roots of two binary expression trees, <code>root1</code> and <code>root2</code>. Return <code>true</code><em> if the two binary expression trees are equivalent</em>. Otherwise, return <code>false</code>.</p>\n\n<p>Two binary expression trees are equivalent if they <strong>evaluate to the same value</strong> regardless of what the variables are set to.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> root1 = [x], root2 = [x]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/tree1.png\" style=\"width: 211px; height: 131px;\"></strong></p>\n\n<pre><strong>Input:</strong> root1 = [+,a,+,null,null,b,c], root2 = [+,+,a,b,c]\n<strong>Output:</strong> true\n<strong>Explaination:</strong> <code>a + (b + c) == (b + c) + a</code></pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/04/tree2.png\" style=\"width: 211px; height: 131px;\"></strong></p>\n\n<pre><strong>Input:</strong> root1 = [+,a,+,null,null,b,c], root2 = [+,+,a,b,d]\n<strong>Output:</strong> false\n<strong>Explaination:</strong> <code>a + (b + c) != (b + d) + a</code>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in both trees are equal, odd and, in the range <code>[1, 4999]</code>.</li>\n\t<li><code>Node.val</code> is <code>'+'</code> or a lower-case English letter.</li>\n\t<li>It's <strong>guaranteed</strong> that the tree given is a valid binary expression tree.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> What will you change in your solution if the tree also supports the <code>'-'</code> operator (i.e. subtraction)?</p>\n", "relatedTopics": ["Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [], "problemName": "check-if-two-expression-trees-are-equivalent"}