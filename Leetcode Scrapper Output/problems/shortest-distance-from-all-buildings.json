{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "DoorDash\n5"], ["0 - 6 months", "Google\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n12"], ["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Qualtrics\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Oracle\n3"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Amazon\n2"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Zenefits"]]}], "problem": "<p>You are given an <code>m x n</code> grid <code>grid</code> of values <code>0</code>, <code>1</code>, or <code>2</code>, where:</p>\n\n<ul>\n\t<li>each <code>0</code> marks <strong>an empty land</strong> that you can pass by freely,</li>\n\t<li>each <code>1</code> marks <strong>a building</strong> that you cannot pass through, and</li>\n\t<li>each <code>2</code> marks <strong>an obstacle</strong> that you cannot pass through.</li>\n</ul>\n\n<p>You want to build a house on an empty land that reaches all buildings in the <strong>shortest total travel</strong> distance. You can only move up, down, left, and right.</p>\n\n<p>Return <em>the <strong>shortest travel distance</strong> for such a house</em>. If it is not possible to build such a house according to the above rules, return <code>-1</code>.</p>\n\n<p>The <strong>total travel distance</strong> is the sum of the distances between the houses of the friends and the meeting point.</p>\n\n<p>The distance is calculated using <a href=\"http://en.wikipedia.org/wiki/Taxicab_geometry\" target=\"_blank\">Manhattan Distance</a>, where <code>distance(p1, p2) = |p2.x - p1.x| + |p2.y - p1.y|</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/buildings-grid.jpg\" style=\"width: 413px; height: 253px;\">\n<pre><strong>Input:</strong> grid = [[1,0,2,0,1],[0,0,0,0,0],[0,0,1,0,0]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Given three buildings at (0,0), (0,4), (2,2), and an obstacle at (0,2).\nThe point (1,2) is an ideal empty land to build a house, as the total travel distance of 3+3+1=7 is minimal.\nSo return 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> grid = [[1,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> grid = [[1]]\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>grid[i][j]</code> is either <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n\t<li>There will be <strong>at least one</strong> building in the <code>grid</code>.</li>\n</ul>\n", "relatedTopics": ["Array", "Breadth-First Search", "Matrix"], "similarQuestions": [], "problemName": "shortest-distance-from-all-buildings"}