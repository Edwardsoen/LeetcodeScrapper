{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n2"], ["0 - 6 months", "HRT\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n2"], ["6 months - 1 year", "Microsoft\n2"], ["6 months - 1 year", "Apple\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "ByteDance\n8"], ["1 year - 2 years", "Bloomberg\n4"], ["1 year - 2 years", "Pinterest\n2"], ["1 year - 2 years", "TikTok\n2"]]}], "problem": "<p>Given a string <code>formula</code> representing a chemical formula, return <em>the count of each atom</em>.</p>\n\n<p>The atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.</p>\n\n<p>One or more digits representing that element's count may follow if the count is greater than <code>1</code>. If the count is <code>1</code>, no digits will follow.</p>\n\n<ul>\n\t<li>For example, <code>\"H2O\"</code> and <code>\"H2O2\"</code> are possible, but <code>\"H1O2\"</code> is impossible.</li>\n</ul>\n\n<p>Two formulas are concatenated together to produce another formula.</p>\n\n<ul>\n\t<li>For example, <code>\"H2O2He3Mg4\"</code> is also a formula.</li>\n</ul>\n\n<p>A formula placed in parentheses, and a count (optionally added) is also a formula.</p>\n\n<ul>\n\t<li>For example, <code>\"(H2O2)\"</code> and <code>\"(H2O2)3\"</code> are formulas.</li>\n</ul>\n\n<p>Return the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than <code>1</code>), followed by the second name (in sorted order), followed by its count (if that count is more than <code>1</code>), and so on.</p>\n\n<p>The test cases are generated so that all the values in the output fit in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> formula = \"H2O\"\n<strong>Output:</strong> \"H2O\"\n<strong>Explanation:</strong> The count of elements are {'H': 2, 'O': 1}.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> formula = \"Mg(OH)2\"\n<strong>Output:</strong> \"H2MgO2\"\n<strong>Explanation:</strong> The count of elements are {'H': 2, 'Mg': 1, 'O': 2}.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> formula = \"K4(ON(SO3)2)2\"\n<strong>Output:</strong> \"K4N2O14S4\"\n<strong>Explanation:</strong> The count of elements are {'K': 4, 'N': 2, 'O': 14, 'S': 4}.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= formula.length &lt;= 1000</code></li>\n\t<li><code>formula</code> consists of English letters, digits, <code>'('</code>, and <code>')'</code>.</li>\n\t<li><code>formula</code> is always valid.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "String", "Stack", "Sorting"], "similarQuestions": [], "problemName": "number-of-atoms"}