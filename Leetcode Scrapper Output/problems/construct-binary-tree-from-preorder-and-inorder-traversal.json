{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n7"], ["0 - 6 months", "Amazon\n6"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n6"], ["6 months - 1 year", "Adobe\n4"], ["6 months - 1 year", "Google\n3"], ["6 months - 1 year", "Apple\n3"], ["6 months - 1 year", "Yahoo\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n6"], ["1 year - 2 years", "ByteDance\n5"], ["1 year - 2 years", "Facebook\n4"], ["1 year - 2 years", "Splunk\n3"], ["1 year - 2 years", "LinkedIn\n2"], ["1 year - 2 years", "TikTok\n2"]]}], "problem": "<p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\">\n<pre><strong>Input:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> preorder = [-1], inorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= preorder.length &lt;= 3000</code></li>\n\t<li><code>inorder.length == preorder.length</code></li>\n\t<li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li>\n\t<li><code>preorder</code> and <code>inorder</code> consist of <strong>unique</strong> values.</li>\n\t<li>Each value of <code>inorder</code> also appears in <code>preorder</code>.</li>\n\t<li><code>preorder</code> is <strong>guaranteed</strong> to be the preorder traversal of the tree.</li>\n\t<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n</ul>\n", "relatedTopics": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"], "similarQuestions": [{"questionName": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": "Medium"}], "problemName": "construct-binary-tree-from-preorder-and-inorder-traversal"}