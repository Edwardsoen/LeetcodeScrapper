{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Amazon"]]}], "problem": "<p>You are given a string <code>s</code>, which contains stars <code>*</code>.</p>\n\n<p>In one operation, you can:</p>\n\n<ul>\n\t<li>Choose a star in <code>s</code>.</li>\n\t<li>Remove the closest <strong>non-star</strong> character to its <strong>left</strong>, as well as remove the star itself.</li>\n</ul>\n\n<p>Return <em>the string after <strong>all</strong> stars have been removed</em>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The input will be generated such that the operation is always possible.</li>\n\t<li>It can be shown that the resulting string will always be unique.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"leet**cod*e\"\n<strong>Output:</strong> \"lecoe\"\n<strong>Explanation:</strong> Performing the removals from left to right:\n- The closest character to the 1<sup>st</sup> star is 't' in \"lee<strong><u>t</u></strong>**cod*e\". s becomes \"lee*cod*e\".\n- The closest character to the 2<sup>nd</sup> star is 'e' in \"le<strong><u>e</u></strong>*cod*e\". s becomes \"lecod*e\".\n- The closest character to the 3<sup>rd</sup> star is 'd' in \"leco<strong><u>d</u></strong>*e\". s becomes \"lecoe\".\nThere are no more stars, so we return \"lecoe\".</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"erase*****\"\n<strong>Output:</strong> \"\"\n<strong>Explanation:</strong> The entire string is removed, so we return an empty string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters and stars <code>*</code>.</li>\n\t<li>The operation above can be performed on <code>s</code>.</li>\n</ul>\n", "relatedTopics": ["String", "Stack", "Simulation"], "similarQuestions": [{"questionName": "Backspace String Compare", "difficulty": "Easy"}, {"questionName": "Remove All Adjacent Duplicates In String", "difficulty": "Easy"}], "problemName": "removing-stars-from-a-string"}