{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Microsoft\n3"], ["1 year - 2 years", "Amazon\n2"], ["1 year - 2 years", "Google"]]}], "problem": "<p>A string is called a <strong>happy prefix</strong> if is a <strong>non-empty</strong> prefix which is also a suffix (excluding itself).</p>\n\n<p>Given a string <code>s</code>, return <em>the <strong>longest happy prefix</strong> of</em> <code>s</code>. Return an empty string <code>\"\"</code> if no such prefix exists.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"level\"\n<strong>Output:</strong> \"l\"\n<strong>Explanation:</strong> s contains 4 prefix excluding itself (\"l\", \"le\", \"lev\", \"leve\"), and suffix (\"l\", \"el\", \"vel\", \"evel\"). The largest prefix which is also suffix is given by \"l\".\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"ababab\"\n<strong>Output:</strong> \"abab\"\n<strong>Explanation:</strong> \"abab\" is the largest prefix which is also suffix. They can overlap in the original string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["String", "Rolling Hash", "String Matching", "Hash Function"], "similarQuestions": [{"questionName": "Sum of Scores of Built Strings", "difficulty": "Hard"}, {"questionName": "Maximum Deletions on a String", "difficulty": "Hard"}], "problemName": "longest-happy-prefix"}