{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Amazon\n2"], ["1 year - 2 years", "Apple\n2"], ["1 year - 2 years", "eBay"]]}], "problem": "<p>Given strings <code>s1</code> and <code>s2</code>, return <em>the minimum contiguous&nbsp;substring part of </em><code>s1</code><em>, so that </em><code>s2</code><em> is a subsequence of the part</em>.</p>\n\n<p>If there is no such window in <code>s1</code> that covers all characters in <code>s2</code>, return the empty string <code>\"\"</code>. If there are multiple such minimum-length windows, return the one with the <strong>left-most starting index</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"abcdebdde\", s2 = \"bde\"\n<strong>Output:</strong> \"bcde\"\n<strong>Explanation:</strong> \n\"bcde\" is the answer because it occurs before \"bdde\" which has the same length.\n\"deb\" is not a smaller window because the elements of s2 in the window must occur in order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"jmeqksfrsdcmsiwvaovztaqenprpvnbstl\", s2 = \"u\"\n<strong>Output:</strong> \"\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s1.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= s2.length &lt;= 100</code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["String", "Dynamic Programming", "Sliding Window"], "similarQuestions": [{"questionName": "Minimum Window Substring", "difficulty": "Hard"}, {"questionName": "Longest Continuous Increasing Subsequence", "difficulty": "Easy"}], "problemName": "minimum-window-subsequence"}