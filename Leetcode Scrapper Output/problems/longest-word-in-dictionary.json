{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n9"], ["6 months - 1 year", "Amazon\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Goldman Sachs\n6"], ["1 year - 2 years", "TikTok\n4"], ["1 year - 2 years", "Adobe\n2"], ["1 year - 2 years", "Pinterest"]]}], "problem": "<p>Given an array of strings <code>words</code> representing an English Dictionary, return <em>the longest word in</em> <code>words</code> <em>that can be built one character at a time by other words in</em> <code>words</code>.</p>\n\n<p>If there is more than one possible answer, return the longest word with the smallest lexicographical order. If there is no answer, return the empty string.</p>\n\n<p>Note that the word should be built from left to right with each additional character being added to the end of a previous word.&nbsp;</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"w\",\"wo\",\"wor\",\"worl\",\"world\"]\n<strong>Output:</strong> \"world\"\n<strong>Explanation:</strong> The word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]\n<strong>Output:</strong> \"apple\"\n<strong>Explanation:</strong> Both \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["Array", "Hash Table", "String", "Trie", "Sorting"], "similarQuestions": [], "problemName": "longest-word-in-dictionary"}