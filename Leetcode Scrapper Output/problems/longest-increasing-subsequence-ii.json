{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n2"]]}], "problem": "<p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>Find the longest subsequence of <code>nums</code> that meets the following requirements:</p>\n\n<ul>\n\t<li>The subsequence is <strong>strictly increasing</strong> and</li>\n\t<li>The difference between adjacent elements in the subsequence is <strong>at most</strong> <code>k</code>.</li>\n</ul>\n\n<p>Return<em> the length of the <strong>longest</strong> <strong>subsequence</strong> that meets the requirements.</em></p>\n\n<p>A <strong>subsequence</strong> is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [4,2,1,4,3,4,5,8,15], k = 3\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nThe longest subsequence that meets the requirements is [1,3,4,5,8].\nThe subsequence has a length of 5, so we return 5.\nNote that the subsequence [1,3,4,5,8,15] does not meet the requirements because 15 - 8 = 7 is larger than 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [7,4,5,1,8,12,4,7], k = 5\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nThe longest subsequence that meets the requirements is [4,5,8,12].\nThe subsequence has a length of 4, so we return 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [1,5], k = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nThe longest subsequence that meets the requirements is [1].\nThe subsequence has a length of 1, so we return 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i], k &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Divide and Conquer", "Dynamic Programming", "Binary Indexed Tree", "Segment Tree", "Queue", "Monotonic Queue"], "similarQuestions": [{"questionName": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"questionName": "Number of Longest Increasing Subsequence", "difficulty": "Medium"}, {"questionName": "Longest Continuous Increasing Subsequence", "difficulty": "Easy"}, {"questionName": "Longest Substring of One Repeating Character", "difficulty": "Hard"}, {"questionName": "Booking Concert Tickets in Groups", "difficulty": "Hard"}], "problemName": "longest-increasing-subsequence-ii"}