{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n2"], ["0 - 6 months", "Yandex\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Airbnb\n7"], ["6 months - 1 year", "LinkedIn\n6"], ["6 months - 1 year", "Google\n5"], ["6 months - 1 year", "Apple\n4"], ["6 months - 1 year", "Facebook\n3"], ["6 months - 1 year", "Uber\n3"], ["6 months - 1 year", "Twitter\n3"], ["6 months - 1 year", "Amazon\n3"], ["6 months - 1 year", "Microsoft\n3"], ["6 months - 1 year", "Adobe\n2"], ["6 months - 1 year", "Accolite\n2"], ["6 months - 1 year", "Coinbase\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Salesforce\n6"], ["1 year - 2 years", "eBay\n3"], ["1 year - 2 years", "Spotify\n2"], ["1 year - 2 years", "Goldman Sachs\n2"], ["1 year - 2 years", "Akuna Capital\n2"]]}], "problem": "<p>You are given a nested list of integers <code>nestedList</code>. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.</p>\n\n<p>Implement the <code>NestedIterator</code> class:</p>\n\n<ul>\n\t<li><code>NestedIterator(List&lt;NestedInteger&gt; nestedList)</code> Initializes the iterator with the nested list <code>nestedList</code>.</li>\n\t<li><code>int next()</code> Returns the next integer in the nested list.</li>\n\t<li><code>boolean hasNext()</code> Returns <code>true</code> if there are still some integers in the nested list and <code>false</code> otherwise.</li>\n</ul>\n\n<p>Your code will be tested with the following pseudocode:</p>\n\n<pre>initialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\n</pre>\n\n<p>If <code>res</code> matches the expected flattened list, then your code will be judged as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nestedList = [[1,1],2,[1,1]]\n<strong>Output:</strong> [1,1,2,1,1]\n<strong>Explanation:</strong> By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nestedList = [1,[4,[6]]]\n<strong>Output:</strong> [1,4,6]\n<strong>Explanation:</strong> By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nestedList.length &lt;= 500</code></li>\n\t<li>The values of the integers in the nested list is in the range <code>[-10<sup>6</sup>, 10<sup>6</sup>]</code>.</li>\n</ul>\n", "relatedTopics": ["Stack", "Tree", "Depth-First Search", "Design", "Queue", "Iterator"], "similarQuestions": [], "problemName": "flatten-nested-list-iterator"}