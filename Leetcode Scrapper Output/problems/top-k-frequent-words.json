{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n6"], ["0 - 6 months", "Uber\n5"], ["0 - 6 months", "Bloomberg\n4"], ["0 - 6 months", "Atlassian\n3"], ["0 - 6 months", "IBM\n3"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "Yahoo\n2"], ["0 - 6 months", "Adobe\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n9"], ["6 months - 1 year", "Facebook\n5"], ["6 months - 1 year", "Two Sigma\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Oracle\n7"], ["1 year - 2 years", "Goldman Sachs\n4"], ["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Visa\n3"], ["1 year - 2 years", "Nvidia\n2"], ["1 year - 2 years", "Yelp\n2"], ["1 year - 2 years", "ByteDance\n2"], ["1 year - 2 years", "Twitch\n2"], ["1 year - 2 years", "Wish\n2"], ["1 year - 2 years", "Indeed\n2"], ["1 year - 2 years", "Pocket Gems"]]}], "problem": "<p>Given an array of strings <code>words</code> and an integer <code>k</code>, return <em>the </em><code>k</code><em> most frequent strings</em>.</p>\n\n<p>Return the answer <strong>sorted</strong> by <strong>the frequency</strong> from highest to lowest. Sort the words with the same frequency by their <strong>lexicographical order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"], k = 2\n<strong>Output:</strong> [\"i\",\"love\"]\n<strong>Explanation:</strong> \"i\" and \"love\" are the two most frequent words.\nNote that \"i\" comes before \"love\" due to a lower alphabetical order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"], k = 4\n<strong>Output:</strong> [\"the\",\"is\",\"sunny\",\"day\"]\n<strong>Explanation:</strong> \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li><code>k</code> is in the range <code>[1, The number of <strong>unique</strong> words[i]]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Could you solve it in <code>O(n log(k))</code> time and <code>O(n)</code> extra space?</p>\n", "relatedTopics": ["Hash Table", "String", "Trie", "Sorting", "Heap (Priority Queue)", "Bucket Sort", "Counting"], "similarQuestions": [], "problemName": "top-k-frequent-words"}