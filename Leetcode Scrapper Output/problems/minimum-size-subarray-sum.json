{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "Citadel\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n6"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "Goldman Sachs\n2"], ["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Yahoo\n2"], ["6 months - 1 year", "Arcesium\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "ByteDance\n3"], ["1 year - 2 years", "Adobe\n2"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "Paypal\n2"]]}], "problem": "<p>Given an array of positive integers <code>nums</code> and a positive integer <code>target</code>, return <em>the <strong>minimal length</strong> of a </em><span data-keyword=\"subarray-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-7\" aria-expanded=\"false\" data-headlessui-state=\"\"><em>subarray</em></div></div></div></span><em> whose sum is greater than or equal to</em> <code>target</code>. If there is no such subarray, return <code>0</code> instead.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> target = 7, nums = [2,3,1,2,4,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The subarray [4,3] has the minimal length under the problem constraint.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> target = 4, nums = [1,4,4]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> target = 11, nums = [1,1,1,1,1,1,1,1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution of which the time complexity is <code>O(n log(n))</code>.", "relatedTopics": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"], "similarQuestions": [], "problemName": "minimum-size-subarray-sum"}