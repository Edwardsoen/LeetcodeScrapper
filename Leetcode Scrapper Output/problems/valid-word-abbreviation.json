{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Facebook\n9"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Uber\n2"]]}], "problem": "<p>A string can be <strong>abbreviated</strong> by replacing any number of <strong>non-adjacent</strong>, <strong>non-empty</strong> substrings with their lengths. The lengths <strong>should not</strong> have leading zeros.</p>\n\n<p>For example, a string such as <code>\"substitution\"</code> could be abbreviated as (but not limited to):</p>\n\n<ul>\n\t<li><code>\"s10n\"</code> (<code>\"s <u>ubstitutio</u> n\"</code>)</li>\n\t<li><code>\"sub4u4\"</code> (<code>\"sub <u>stit</u> u <u>tion</u>\"</code>)</li>\n\t<li><code>\"12\"</code> (<code>\"<u>substitution</u>\"</code>)</li>\n\t<li><code>\"su3i1u2on\"</code> (<code>\"su <u>bst</u> i <u>t</u> u <u>ti</u> on\"</code>)</li>\n\t<li><code>\"substitution\"</code> (no substrings replaced)</li>\n</ul>\n\n<p>The following are <strong>not valid</strong> abbreviations:</p>\n\n<ul>\n\t<li><code>\"s55n\"</code> (<code>\"s <u>ubsti</u> <u>tutio</u> n\"</code>, the replaced substrings are adjacent)</li>\n\t<li><code>\"s010n\"</code> (has leading zeros)</li>\n\t<li><code>\"s0ubstitution\"</code> (replaces an empty substring)</li>\n</ul>\n\n<p>Given a string <code>word</code> and an abbreviation <code>abbr</code>, return <em>whether the string <strong>matches</strong> the given abbreviation</em>.</p>\n\n<p>A <strong>substring</strong> is a contiguous <strong>non-empty</strong> sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> word = \"internationalization\", abbr = \"i12iz4n\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The word \"internationalization\" can be abbreviated as \"i12iz4n\" (\"i <u>nternational</u> iz <u>atio</u> n\").\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> word = \"apple\", abbr = \"a2e\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The word \"apple\" cannot be abbreviated as \"a2e\".\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 20</code></li>\n\t<li><code>word</code> consists of only lowercase English letters.</li>\n\t<li><code>1 &lt;= abbr.length &lt;= 10</code></li>\n\t<li><code>abbr</code> consists of lowercase English letters and digits.</li>\n\t<li>All the integers in <code>abbr</code> will fit in a 32-bit integer.</li>\n</ul>\n", "relatedTopics": ["Two Pointers", "String"], "similarQuestions": [], "problemName": "valid-word-abbreviation"}