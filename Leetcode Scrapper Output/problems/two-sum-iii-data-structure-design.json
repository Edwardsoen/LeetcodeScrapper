{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "LinkedIn\n2"]]}], "problem": "<p>Design a data structure that accepts a stream of integers and checks if it has a pair of integers that sum up to a particular value.</p>\n\n<p>Implement the <code>TwoSum</code> class:</p>\n\n<ul>\n\t<li><code>TwoSum()</code> Initializes the <code>TwoSum</code> object, with an empty array initially.</li>\n\t<li><code>void add(int number)</code> Adds <code>number</code> to the data structure.</li>\n\t<li><code>boolean find(int value)</code> Returns <code>true</code> if there exists any pair of numbers whose sum is equal to <code>value</code>, otherwise, it returns <code>false</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input</strong>\n[\"TwoSum\", \"add\", \"add\", \"add\", \"find\", \"find\"]\n[[], [1], [3], [5], [4], [7]]\n<strong>Output</strong>\n[null, null, null, null, true, false]\n\n<strong>Explanation</strong>\nTwoSum twoSum = new TwoSum();\ntwoSum.add(1);   // [] --&gt; [1]\ntwoSum.add(3);   // [1] --&gt; [1,3]\ntwoSum.add(5);   // [1,3] --&gt; [1,3,5]\ntwoSum.find(4);  // 1 + 3 = 4, return true\ntwoSum.find(7);  // No two integers sum up to 7, return false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-10<sup>5</sup> &lt;= number &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= value &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>add</code> and <code>find</code>.</li>\n</ul>\n", "relatedTopics": ["Array", "Hash Table", "Two Pointers", "Design", "Data Stream"], "similarQuestions": [], "problemName": "two-sum-iii-data-structure-design"}