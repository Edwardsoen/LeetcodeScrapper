{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "Adobe\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n2"]]}], "problem": "<p>Given the <code>root</code> of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it.</p>\n\n<p>Omit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/cons1-tree.jpg\" style=\"width: 292px; height: 301px;\">\n<pre><strong>Input:</strong> root = [1,2,3,4]\n<strong>Output:</strong> \"1(2(4))(3)\"\n<strong>Explanation:</strong> Originally, it needs to be \"1(2(4)())(3()())\", but you need to omit all the unnecessary empty parenthesis pairs. And it will be \"1(2(4))(3)\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/03/cons2-tree.jpg\" style=\"width: 207px; height: 293px;\">\n<pre><strong>Input:</strong> root = [1,2,3,null,4]\n<strong>Output:</strong> \"1(2()(4))(3)\"\n<strong>Explanation:</strong> Almost the same as the first example, except we cannot omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n", "relatedTopics": ["String", "Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [], "problemName": "construct-string-from-binary-tree"}