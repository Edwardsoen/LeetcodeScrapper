{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Bloomberg\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n3"], ["6 months - 1 year", "Amazon\n2"], ["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Apple\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Facebook\n2"]]}], "problem": "<p>Given an integer <code>n</code>, return <em>all the structurally unique <strong>BST'</strong>s (binary search trees), which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>. Return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" style=\"width: 600px; height: 148px;\">\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n", "relatedTopics": ["Dynamic Programming", "Backtracking", "Tree", "Binary Search Tree", "Binary Tree"], "similarQuestions": [{"questionName": "Unique Binary Search Trees", "difficulty": "Medium"}, {"questionName": "Different Ways to Add Parentheses", "difficulty": "Medium"}], "problemName": "unique-binary-search-trees-ii"}