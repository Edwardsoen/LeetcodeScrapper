{"tags": [], "problem": "<p>Table: <code>Person</code></p>\n\n<pre>+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| person_id   | int     |\n| name        | varchar |\n| profession  | ENUM    |\n+-------------+---------+\nperson_id is the primary key for this table.\nEach row in this table contains a person's ID, name, and profession.\nThe profession   column in an enum of the type ('Doctor', 'Singer', 'Actor', 'Player', 'Engineer', or 'Lawyer')\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report each person's name followed by the first letter of their profession enclosed in parentheses.</p>\n\n<p>Return the result table <strong>ordered</strong> by <code>person_id</code> in <strong>descending order</strong>.</p>\n\n<p>The query result format is shown in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> \nPerson table:\n+-----------+-------+------------+\n| person_id | name  | profession |\n+-----------+-------+------------+\n| 1         | Alex  | Singer     |\n| 3         | Alice | Actor      |\n| 2         | Bob   | Player     |\n| 4         | Messi | Doctor     |\n| 6         | Tyson | Engineer   |\n| 5         | Meir  | Lawyer     |\n+-----------+-------+------------+\n<strong>Output:</strong> \n+-----------+----------+\n| person_id | name     |\n+-----------+----------+\n| 6         | Tyson(E) |\n| 5         | Meir(L)  |\n| 4         | Messi(D) |\n| 3         | Alice(A) |\n| 2         | Bob(P)   |\n| 1         | Alex(S)  |\n+-----------+----------+\n<strong>Explanation:</strong> Note that there should not be any white space between the name and the first letter of the profession.\n</pre>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "concatenate-the-name-and-the-profession"}