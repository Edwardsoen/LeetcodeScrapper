{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Airbnb\n7"], ["0 - 6 months", "eBay\n4"], ["0 - 6 months", "Apple\n4"], ["0 - 6 months", "Amazon\n3"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Facebook\n2"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Walmart Global Tech\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Bloomberg\n8"], ["6 months - 1 year", "LinkedIn\n4"], ["6 months - 1 year", "ByteDance\n4"], ["6 months - 1 year", "Reddit\n4"], ["6 months - 1 year", "Zillow\n2"], ["6 months - 1 year", "Oracle\n2"], ["6 months - 1 year", "TikTok\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Goldman Sachs\n4"], ["1 year - 2 years", "Uber\n4"], ["1 year - 2 years", "Snapchat\n3"], ["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Cisco\n2"], ["1 year - 2 years", "Arcesium\n2"]]}], "problem": "<p>Given an array of <strong>distinct</strong> integers <code>candidates</code> and a target integer <code>target</code>, return <em>a list of all <strong>unique combinations</strong> of </em><code>candidates</code><em> where the chosen numbers sum to </em><code>target</code><em>.</em> You may return the combinations in <strong>any order</strong>.</p>\n\n<p>The <strong>same</strong> number may be chosen from <code>candidates</code> an <strong>unlimited number of times</strong>. Two combinations are unique if the <span data-keyword=\"frequency-array\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-7\" aria-expanded=\"false\" data-headlessui-state=\"\">frequency</div></div></div></span> of at least one of the chosen numbers is different.</p>\n\n<p>The test cases are generated such that the number of unique combinations that sum up to <code>target</code> is less than <code>150</code> combinations for the given input.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> candidates = [2,3,6,7], target = 7\n<strong>Output:</strong> [[2,2,3],[7]]\n<strong>Explanation:</strong>\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> candidates = [2,3,5], target = 8\n<strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> candidates = [2], target = 1\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 30</code></li>\n\t<li><code>2 &lt;= candidates[i] &lt;= 40</code></li>\n\t<li>All elements of <code>candidates</code> are <strong>distinct</strong>.</li>\n\t<li><code>1 &lt;= target &lt;= 40</code></li>\n</ul>\n", "relatedTopics": ["Array", "Backtracking"], "similarQuestions": [], "problemName": "combination-sum"}