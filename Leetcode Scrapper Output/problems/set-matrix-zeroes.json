{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n7"], ["0 - 6 months", "Bloomberg\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n10"], ["6 months - 1 year", "Adobe\n6"], ["6 months - 1 year", "Apple\n4"], ["6 months - 1 year", "Facebook\n3"], ["6 months - 1 year", "Oracle\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Samsung\n3"], ["1 year - 2 years", "Goldman Sachs\n3"], ["1 year - 2 years", "Qualtrics\n3"], ["1 year - 2 years", "Expedia\n2"], ["1 year - 2 years", "Google\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Myntra\n2"], ["1 year - 2 years", "Juspay\n2"], ["1 year - 2 years", "Infosys\n2"]]}], "problem": "<p>Given an <code>m x n</code> integer matrix <code>matrix</code>, if an element is <code>0</code>, set its entire row and column to <code>0</code>'s.</p>\n\n<p>You must do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" style=\"width: 450px; height: 169px;\">\n<pre><strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" style=\"width: 450px; height: 137px;\">\n<pre><strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[0].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A straightforward solution using <code>O(mn)</code> space is probably a bad idea.</li>\n\t<li>A simple improvement uses <code>O(m + n)</code> space, but still not the best solution.</li>\n\t<li>Could you devise a constant space solution?</li>\n</ul>\n", "relatedTopics": ["Array", "Hash Table", "Matrix"], "similarQuestions": [], "problemName": "set-matrix-zeroes"}