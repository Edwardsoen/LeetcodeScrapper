{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n4"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "Adobe\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Facebook\n3"], ["6 months - 1 year", "Apple\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Bloomberg\n4"], ["1 year - 2 years", "Goldman Sachs\n4"], ["1 year - 2 years", "Oracle\n2"], ["1 year - 2 years", "Yahoo\n2"]]}], "problem": "<p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes' values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 125px; height: 200px;\">\n<pre><strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?", "relatedTopics": ["Stack", "Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [], "problemName": "binary-tree-inorder-traversal"}