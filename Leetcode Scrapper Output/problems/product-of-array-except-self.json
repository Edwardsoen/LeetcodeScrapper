{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n9"], ["0 - 6 months", "Microsoft\n4"], ["0 - 6 months", "Apple\n3"], ["0 - 6 months", "Bloomberg\n3"], ["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Uber\n2"], ["0 - 6 months", "Salesforce\n2"], ["0 - 6 months", "American Express\n2"], ["0 - 6 months", "DE Shaw\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Asana\n13"], ["6 months - 1 year", "Facebook\n10"], ["6 months - 1 year", "Walmart Global Tech\n4"], ["6 months - 1 year", "Lyft\n2"], ["6 months - 1 year", "Yahoo\n2"], ["6 months - 1 year", "Groupon\n2"], ["6 months - 1 year", "TikTok\n2"], ["6 months - 1 year", "IBM\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Paypal\n5"], ["1 year - 2 years", "Goldman Sachs\n5"], ["1 year - 2 years", "Oracle\n5"], ["1 year - 2 years", "Intel\n4"], ["1 year - 2 years", "Expedia\n3"], ["1 year - 2 years", "Nutanix\n2"], ["1 year - 2 years", "Nvidia\n2"], ["1 year - 2 years", "ServiceNow\n2"], ["1 year - 2 years", "Indeed\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Qualtrics\n2"], ["1 year - 2 years", "Arista Networks\n2"], ["1 year - 2 years", "JPMorgan\n2"], ["1 year - 2 years", "MakeMyTrip\n2"], ["1 year - 2 years", "Zillow\n2"], ["1 year - 2 years", "LinkedIn"]]}], "problem": "<p>Given an integer array <code>nums</code>, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is equal to the product of all the elements of</em> <code>nums</code> <em>except</em> <code>nums[i]</code>.</p>\n\n<p>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</p>\n\n<p>You must write an algorithm that runs in&nbsp;<code>O(n)</code>&nbsp;time and without using the division operation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> [24,12,8,6]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,1,0,-3,3]\n<strong>Output:</strong> [0,0,9,0,0]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-30 &lt;= nums[i] &lt;= 30</code></li>\n\t<li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Can you solve the problem in <code>O(1)&nbsp;</code>extra&nbsp;space complexity? (The output array <strong>does not</strong> count as extra space for space complexity analysis.)</p>\n", "relatedTopics": ["Array", "Prefix Sum"], "similarQuestions": [], "problemName": "product-of-array-except-self"}