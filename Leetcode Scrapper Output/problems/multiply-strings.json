{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Microsoft\n3"], ["0 - 6 months", "Facebook\n2"], ["0 - 6 months", "Amazon\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n10"], ["6 months - 1 year", "Two Sigma\n5"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "Houzz\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Apple\n9"], ["1 year - 2 years", "Adobe\n4"], ["1 year - 2 years", "Yahoo\n3"], ["1 year - 2 years", "Square\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Tesla\n2"], ["1 year - 2 years", "Yandex\n2"], ["1 year - 2 years", "TikTok\n2"], ["1 year - 2 years", "Twitter"]]}], "problem": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n", "relatedTopics": ["Math", "String", "Simulation"], "similarQuestions": [{"questionName": "Add Two Numbers", "difficulty": "Medium"}, {"questionName": "Plus One", "difficulty": "Easy"}, {"questionName": "Add Binary", "difficulty": "Easy"}, {"questionName": "Add Strings", "difficulty": "Easy"}, {"questionName": "Apply Discount to Prices", "difficulty": "Medium"}], "problemName": "multiply-strings"}