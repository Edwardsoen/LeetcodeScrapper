{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "DoorDash\n16"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Amazon\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n8"], ["6 months - 1 year", "Google\n6"], ["6 months - 1 year", "TikTok\n6"], ["6 months - 1 year", "ByteDance\n4"], ["6 months - 1 year", "Bloomberg\n3"], ["6 months - 1 year", "Adobe\n3"], ["6 months - 1 year", "Apple\n3"], ["6 months - 1 year", "Oracle\n2"], ["6 months - 1 year", "Snapchat\n2"], ["6 months - 1 year", "Samsung\n2"], ["6 months - 1 year", "Twitter\n2"], ["6 months - 1 year", "Yandex\n2"], ["6 months - 1 year", "Sprinklr\n2"], ["6 months - 1 year", "TuSimple\n2"], ["6 months - 1 year", "Akuna Capital\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n3"], ["1 year - 2 years", "Myntra\n3"], ["1 year - 2 years", "LinkedIn\n2"], ["1 year - 2 years", "Twilio\n2"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "DiDi\n2"], ["1 year - 2 years", "Flipkart\n2"], ["1 year - 2 years", "Shopee\n2"], ["1 year - 2 years", "Morgan Stanley\n2"], ["1 year - 2 years", "Baidu"], ["1 year - 2 years", "Wix"]]}], "problem": "<p>A <strong>path</strong> in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence <strong>at most once</strong>. Note that the path does not need to pass through the root.</p>\n\n<p>The <strong>path sum</strong> of a path is the sum of the node's values in the path.</p>\n\n<p>Given the <code>root</code> of a binary tree, return <em>the maximum <strong>path sum</strong> of any <strong>non-empty</strong> path</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg\" style=\"width: 322px; height: 182px;\">\n<pre><strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal path is 2 -&gt; 1 -&gt; 3 with a path sum of 2 + 1 + 3 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg\">\n<pre><strong>Input:</strong> root = [-10,9,20,null,null,15,7]\n<strong>Output:</strong> 42\n<strong>Explanation:</strong> The optimal path is 15 -&gt; 20 -&gt; 7 with a path sum of 15 + 20 + 7 = 42.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 3 * 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n", "relatedTopics": ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [], "problemName": "binary-tree-maximum-path-sum"}