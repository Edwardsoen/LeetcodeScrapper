{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n4"], ["0 - 6 months", "Apple\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "LinkedIn\n7"], ["6 months - 1 year", "Google\n6"], ["6 months - 1 year", "Spotify\n4"], ["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Facebook\n4"], ["6 months - 1 year", "Adobe\n3"], ["6 months - 1 year", "Bloomberg\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Yandex\n2"], ["1 year - 2 years", "Intel\n2"], ["1 year - 2 years", "Visa\n2"], ["1 year - 2 years", "Yahoo"], ["1 year - 2 years", "Uber"]]}], "problem": "<p>Given the <code>root</code> of a binary tree, return <em>its maximum depth</em>.</p>\n\n<p>A binary tree's <strong>maximum depth</strong>&nbsp;is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/tmp-tree.jpg\" style=\"width: 400px; height: 277px;\">\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n", "relatedTopics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"], "similarQuestions": [{"questionName": "Balanced Binary Tree", "difficulty": "Easy"}, {"questionName": "Minimum Depth of Binary Tree", "difficulty": "Easy"}, {"questionName": "Maximum Depth of N-ary Tree", "difficulty": "Easy"}, {"questionName": "Time Needed to Inform All Employees", "difficulty": "Medium"}, {"questionName": "Amount of Time for Binary Tree to Be Infected", "difficulty": "Medium"}, {"questionName": "Height of Binary Tree After Subtree Removal Queries", "difficulty": "Hard"}], "problemName": "maximum-depth-of-binary-tree"}