{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n4"], ["0 - 6 months", "Facebook\n3"], ["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "Uber\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n3"], ["6 months - 1 year", "Adobe\n2"], ["6 months - 1 year", "Apple\n2"], ["6 months - 1 year", "TikTok\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Microsoft\n2"], ["1 year - 2 years", "ByteDance\n2"]]}], "problem": "<p>Given a string <code>s</code> that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.</p>\n\n<p>Return <em>a list of <strong>unique strings</strong> that are valid with the minimum number of removals</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"()())()\"\n<strong>Output:</strong> [\"(())()\",\"()()()\"]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"(a)())()\"\n<strong>Output:</strong> [\"(a())()\",\"(a)()()\"]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \")(\"\n<strong>Output:</strong> [\"\"]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 25</code></li>\n\t<li><code>s</code> consists of lowercase English letters and parentheses <code>'('</code> and <code>')'</code>.</li>\n\t<li>There will be at most <code>20</code> parentheses in <code>s</code>.</li>\n</ul>\n", "relatedTopics": ["String", "Backtracking", "Breadth-First Search"], "similarQuestions": [{"questionName": "Valid Parentheses", "difficulty": "Easy"}, {"questionName": "Minimum Number of Swaps to Make the String Balanced", "difficulty": "Medium"}], "problemName": "remove-invalid-parentheses"}