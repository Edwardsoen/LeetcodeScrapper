{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "DoorDash\n6"], ["0 - 6 months", "Airbnb\n5"], ["0 - 6 months", "Google\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n5"], ["6 months - 1 year", "Swiggy\n3"], ["6 months - 1 year", "Databricks\n3"], ["6 months - 1 year", "Uber\n2"], ["6 months - 1 year", "Adobe\n2"], ["6 months - 1 year", "TikTok\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "LinkedIn\n6"], ["1 year - 2 years", "Microsoft\n5"], ["1 year - 2 years", "Atlassian\n3"], ["1 year - 2 years", "ByteDance\n2"], ["1 year - 2 years", "Cisco\n2"], ["1 year - 2 years", "Apple\n2"], ["1 year - 2 years", "Indeed\n2"], ["1 year - 2 years", "epiFi\n2"], ["1 year - 2 years", "Pony.ai"]]}], "problem": "<p>We have <code>n</code> jobs, where every job is scheduled to be done from <code>startTime[i]</code> to <code>endTime[i]</code>, obtaining a profit of <code>profit[i]</code>.</p>\n\n<p>You're given the <code>startTime</code>, <code>endTime</code> and <code>profit</code> arrays, return the maximum profit you can take such that there are no two jobs in the subset with overlapping time range.</p>\n\n<p>If you choose a job that ends at time <code>X</code> you will be able to start another job that starts at time <code>X</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample1_1584.png\" style=\"width: 380px; height: 154px;\"></strong></p>\n\n<pre><strong>Input:</strong> startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]\n<strong>Output:</strong> 120\n<strong>Explanation:</strong> The subset chosen is the first and fourth job. \nTime range [1-3]+[3-6] , we get profit of 120 = 50 + 70.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample22_1584.png\" style=\"width: 600px; height: 112px;\"> </strong></p>\n\n<pre><strong>Input:</strong> startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]\n<strong>Output:</strong> 150\n<strong>Explanation:</strong> The subset chosen is the first, fourth and fifth job. \nProfit obtained 150 = 20 + 70 + 60.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/10/sample3_1584.png\" style=\"width: 400px; height: 112px;\"></strong></p>\n\n<pre><strong>Input:</strong> startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]\n<strong>Output:</strong> 6\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= startTime.length == endTime.length == profit.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= startTime[i] &lt; endTime[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= profit[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Binary Search", "Dynamic Programming", "Sorting"], "similarQuestions": [{"questionName": "Maximum Earnings From Taxi", "difficulty": "Medium"}, {"questionName": "Two Best Non-Overlapping Events", "difficulty": "Medium"}], "problemName": "maximum-profit-in-job-scheduling"}