{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Facebook\n19"], ["0 - 6 months", "Spotify\n8"], ["0 - 6 months", "Amazon\n7"], ["0 - 6 months", "Adobe\n3"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "LinkedIn\n2"], ["0 - 6 months", "Walmart Global Tech\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n12"], ["6 months - 1 year", "Google\n8"], ["6 months - 1 year", "Bloomberg\n5"], ["6 months - 1 year", "Goldman Sachs\n4"], ["6 months - 1 year", "Oracle\n3"], ["6 months - 1 year", "TikTok\n3"], ["6 months - 1 year", "Intuit\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n5"], ["1 year - 2 years", "Shopee\n5"], ["1 year - 2 years", "ServiceNow\n3"], ["1 year - 2 years", "eBay\n3"], ["1 year - 2 years", "Paypal\n3"], ["1 year - 2 years", "Nvidia\n2"], ["1 year - 2 years", "ByteDance\n2"], ["1 year - 2 years", "Dell\n2"], ["1 year - 2 years", "Grab\n2"], ["1 year - 2 years", "Cisco\n2"], ["1 year - 2 years", "Flipkart\n2"], ["1 year - 2 years", "Pocket Gems"]]}], "problem": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>largest element in the array</em>.</p>\n\n<p>Note that it is the <code>k<sup>th</sup></code> largest element in the sorted order, not the <code>k<sup>th</sup></code> distinct element.</p>\n\n<p>You must solve it in <code>O(n)</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1,5,6,4], k = 2\n<strong>Output:</strong> 5\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,3,1,2,4,5,5,6], k = 4\n<strong>Output:</strong> 4\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"], "similarQuestions": [{"questionName": "Wiggle Sort II", "difficulty": "Medium"}, {"questionName": "Top K Frequent Elements", "difficulty": "Medium"}, {"questionName": "Third Maximum Number", "difficulty": "Easy"}, {"questionName": "Kth Largest Element in a Stream", "difficulty": "Easy"}, {"questionName": "K Closest Points to Origin", "difficulty": "Medium"}, {"questionName": "Find the Kth Largest Integer in the Array", "difficulty": "Medium"}, {"questionName": "Find Subsequence of Length K With the Largest Sum", "difficulty": "Easy"}, {"questionName": "K Highest Ranked Items Within a Price Range", "difficulty": "Medium"}], "problemName": "kth-largest-element-in-an-array"}