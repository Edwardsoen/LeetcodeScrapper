{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google\n5"], ["1 year - 2 years", "TikTok\n4"], ["1 year - 2 years", "Facebook\n3"], ["1 year - 2 years", "Adobe\n3"], ["1 year - 2 years", "Microsoft\n2"], ["1 year - 2 years", "Zoho\n2"], ["1 year - 2 years", "Apple\n2"], ["1 year - 2 years", "LinkedIn"]]}], "problem": "<p>Given two integer arrays <code>pushed</code> and <code>popped</code> each with distinct values, return <code>true</code><em> if this could have been the result of a sequence of push and pop operations on an initially empty stack, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We might do the following sequence:\npush(1), push(2), push(3), push(4),\npop() -&gt; 4,\npush(5),\npop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> 1 cannot be popped before 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pushed.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i] &lt;= 1000</code></li>\n\t<li>All the elements of <code>pushed</code> are <strong>unique</strong>.</li>\n\t<li><code>popped.length == pushed.length</code></li>\n\t<li><code>popped</code> is a permutation of <code>pushed</code>.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "validate-stack-sequences"}