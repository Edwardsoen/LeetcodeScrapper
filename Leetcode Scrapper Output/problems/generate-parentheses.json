{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n11"], ["0 - 6 months", "Adobe\n5"], ["0 - 6 months", "Microsoft\n4"], ["0 - 6 months", "Apple\n4"], ["0 - 6 months", "TikTok\n4"], ["0 - 6 months", "Uber\n2"], ["0 - 6 months", "Yahoo\n2"], ["0 - 6 months", "Walmart Global Tech\n2"], ["0 - 6 months", "Yandex\n2"], ["0 - 6 months", "Oracle\n2"], ["0 - 6 months", "TripAdvisor\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n14"], ["6 months - 1 year", "Bloomberg\n9"], ["6 months - 1 year", "Lyft\n4"], ["6 months - 1 year", "Google\n3"], ["6 months - 1 year", "ServiceNow\n3"], ["6 months - 1 year", "ByteDance\n3"], ["6 months - 1 year", "Huawei\n3"], ["6 months - 1 year", "Infosys\n3"], ["6 months - 1 year", "Zoho\n3"], ["6 months - 1 year", "C3 IoT\n2"], ["6 months - 1 year", "Grab\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Intuit\n3"], ["1 year - 2 years", "Goldman Sachs\n3"], ["1 year - 2 years", "Paypal\n3"], ["1 year - 2 years", "tcs\n3"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Salesforce\n2"], ["1 year - 2 years", "Spotify\n2"], ["1 year - 2 years", "Wish\n2"], ["1 year - 2 years", "FactSet\n2"], ["1 year - 2 years", "Zoom\n2"], ["1 year - 2 years", "Arcesium\n2"], ["1 year - 2 years", "razorpay\n2"], ["1 year - 2 years", "Tesla\n2"], ["1 year - 2 years", "Zenefits"]]}], "problem": "<p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n", "relatedTopics": ["String", "Dynamic Programming", "Backtracking"], "similarQuestions": [{"questionName": "Letter Combinations of a Phone Number", "difficulty": "Medium"}, {"questionName": "Valid Parentheses", "difficulty": "Easy"}, {"questionName": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}], "problemName": "generate-parentheses"}