{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n26"], ["0 - 6 months", "Cisco\n6"], ["0 - 6 months", "Apple\n5"], ["0 - 6 months", "Microsoft\n4"], ["0 - 6 months", "Bloomberg\n4"], ["0 - 6 months", "Twilio\n3"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Facebook\n2"], ["0 - 6 months", "Adobe\n2"], ["0 - 6 months", "JPMorgan\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "LinkedIn\n34"], ["6 months - 1 year", "Uber\n6"], ["6 months - 1 year", "Oracle\n5"], ["6 months - 1 year", "Expedia\n3"], ["6 months - 1 year", "Shopee\n3"], ["6 months - 1 year", "Docusign\n3"], ["6 months - 1 year", "Goldman Sachs\n2"], ["6 months - 1 year", "VMware\n2"], ["6 months - 1 year", "ByteDance\n2"], ["6 months - 1 year", "IBM\n2"], ["6 months - 1 year", "Walmart Global Tech\n2"], ["6 months - 1 year", "DE Shaw\n2"], ["6 months - 1 year", "Poshmark\n2"], ["6 months - 1 year", "TikTok\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "eBay\n6"], ["1 year - 2 years", "Intel\n4"], ["1 year - 2 years", "Yahoo\n4"], ["1 year - 2 years", "ServiceNow\n4"], ["1 year - 2 years", "Splunk\n4"], ["1 year - 2 years", "Samsung\n4"], ["1 year - 2 years", "Salesforce\n3"], ["1 year - 2 years", "Infosys\n3"], ["1 year - 2 years", "Tesla\n2"], ["1 year - 2 years", "Yandex\n2"], ["1 year - 2 years", "PayTM\n2"], ["1 year - 2 years", "tcs\n2"], ["1 year - 2 years", "Cognizant\n2"], ["1 year - 2 years", "Wix"]]}], "problem": "<p>Given an integer array <code>nums</code>, find the <span data-keyword=\"subarray-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-7\" aria-expanded=\"false\" data-headlessui-state=\"\">subarray</div></div></div></span> with the largest sum, and return <em>its sum</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The subarray [4,-1,2,1] has the largest sum 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The subarray [1] has the largest sum 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [5,4,-1,7,8]\n<strong>Output:</strong> 23\n<strong>Explanation:</strong> The subarray [5,4,-1,7,8] has the largest sum 23.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p>\n", "relatedTopics": ["Array", "Divide and Conquer", "Dynamic Programming"], "similarQuestions": [], "problemName": "maximum-subarray"}