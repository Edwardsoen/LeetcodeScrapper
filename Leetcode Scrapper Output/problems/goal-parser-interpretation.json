{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Apple\n3"], ["1 year - 2 years", "Amazon\n2"]]}], "problem": "<p>You own a <strong>Goal Parser</strong> that can interpret a string <code>command</code>. The <code>command</code> consists of an alphabet of <code>\"G\"</code>, <code>\"()\"</code> and/or <code>\"(al)\"</code> in some order. The Goal Parser will interpret <code>\"G\"</code> as the string <code>\"G\"</code>, <code>\"()\"</code> as the string <code>\"o\"</code>, and <code>\"(al)\"</code> as the string <code>\"al\"</code>. The interpreted strings are then concatenated in the original order.</p>\n\n<p>Given the string <code>command</code>, return <em>the <strong>Goal Parser</strong>'s interpretation of </em><code>command</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> command = \"G()(al)\"\n<strong>Output:</strong> \"Goal\"\n<strong>Explanation:</strong>&nbsp;The Goal Parser interprets the command as follows:\nG -&gt; G\n() -&gt; o\n(al) -&gt; al\nThe final concatenated result is \"Goal\".\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> command = \"G()()()()(al)\"\n<strong>Output:</strong> \"Gooooal\"\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> command = \"(al)G(al)()()G\"\n<strong>Output:</strong> \"alGalooG\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= command.length &lt;= 100</code></li>\n\t<li><code>command</code> consists of <code>\"G\"</code>, <code>\"()\"</code>, and/or <code>\"(al)\"</code> in some order.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "goal-parser-interpretation"}