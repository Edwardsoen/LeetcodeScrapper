{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google"]]}], "problem": "<p>You have a video sharing platform where users can upload and delete videos. Each <code>video</code> is a <strong>string</strong> of digits, where the <code>i<sup>th</sup></code> digit of the string represents the content of the video at minute <code>i</code>. For example, the first digit represents the content at minute <code>0</code> in the video, the second digit represents the content at minute <code>1</code> in the video, and so on. Viewers of videos can also like and dislike videos. Internally, the platform keeps track of the <strong>number of views, likes, and dislikes</strong> on each video.</p>\n\n<p>When a video is uploaded, it is associated with the smallest available integer <code>videoId</code> starting from <code>0</code>. Once a video is deleted, the <code>videoId</code> associated with that video can be reused for another video.</p>\n\n<p>Implement the <code>VideoSharingPlatform</code> class:</p>\n\n<ul>\n\t<li><code>VideoSharingPlatform()</code> Initializes the object.</li>\n\t<li><code>int upload(String video)</code> The user uploads a <code>video</code>. Return the <code>videoId</code> associated with the video.</li>\n\t<li><code>void remove(int videoId)</code> If there is a video associated with <code>videoId</code>, remove the video.</li>\n\t<li><code>String watch(int videoId, int startMinute, int endMinute)</code> If there is a video associated with <code>videoId</code>, increase the number of views on the video by <code>1</code> and return the substring of the video string starting at <code>startMinute</code> and ending at <code>min(endMinute, video.length - 1</code><code>)</code> (<strong>inclusive</strong>). Otherwise, return <code>\"-1\"</code>.</li>\n\t<li><code>void like(int videoId)</code> Increases the number of likes on the video associated with <code>videoId</code> by <code>1</code> if there is a video associated with <code>videoId</code>.</li>\n\t<li><code>void dislike(int videoId)</code> Increases the number of dislikes on the video associated with <code>videoId</code> by <code>1</code> if there is a video associated with <code>videoId</code>.</li>\n\t<li><code>int[] getLikesAndDislikes(int videoId)</code> Return a <strong>0-indexed</strong> integer array <code>values</code> of length <code>2</code> where <code>values[0]</code> is the number of likes and <code>values[1]</code> is the number of dislikes on the video associated with <code>videoId</code>. If there is no video associated with <code>videoId</code>, return <code>[-1]</code>.</li>\n\t<li><code>int getViews(int videoId)</code> Return the number of views on the video associated with <code>videoId</code>, if there is no video associated with <code>videoId</code>, return <code>-1</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input</strong>\n[\"VideoSharingPlatform\", \"upload\", \"upload\", \"remove\", \"remove\", \"upload\", \"watch\", \"watch\", \"like\", \"dislike\", \"dislike\", \"getLikesAndDislikes\", \"getViews\"]\n[[], [\"123\"], [\"456\"], [4], [0], [\"789\"], [1, 0, 5], [1, 0, 1], [1], [1], [1], [1], [1]]\n<strong>Output</strong>\n[null, 0, 1, null, null, 0, \"456\", \"45\", null, null, null, [1, 2], 2]\n\n<strong>Explanation</strong>\nVideoSharingPlatform videoSharingPlatform = new VideoSharingPlatform();\nvideoSharingPlatform.upload(\"123\");          // The smallest available videoId is 0, so return 0.\nvideoSharingPlatform.upload(\"456\");          // The smallest available <code>videoId</code> is 1, so return 1.\nvideoSharingPlatform.remove(4);              // There is no video associated with videoId 4, so do nothing.\nvideoSharingPlatform.remove(0);              // Remove the video associated with videoId 0.\nvideoSharingPlatform.upload(\"789\");          // Since the video associated with videoId 0 was deleted,\n                                             // 0 is the smallest available <code>videoId</code>, so return 0.\nvideoSharingPlatform.watch(1, 0, 5);         // The video associated with videoId 1 is \"456\".\n                                             // The video from minute 0 to min(5, 3 - 1) = 2 is \"456\", so return \"453\".\nvideoSharingPlatform.watch(1, 0, 1);         // The video associated with videoId 1 is \"456\".\n                                             // The video from minute 0 to min(1, 3 - 1) = 1 is \"45\", so return \"45\".\nvideoSharingPlatform.like(1);                // Increase the number of likes on the video associated with videoId 1.\nvideoSharingPlatform.dislike(1);             // Increase the number of dislikes on the video associated with videoId 1.\nvideoSharingPlatform.dislike(1);             // Increase the number of dislikes on the video associated with videoId 1.\nvideoSharingPlatform.getLikesAndDislikes(1); // There is 1 like and 2 dislikes on the video associated with videoId 1, so return [1, 2].\nvideoSharingPlatform.getViews(1);            // The video associated with videoId 1 has 2 views, so return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input</strong>\n[\"VideoSharingPlatform\", \"remove\", \"watch\", \"like\", \"dislike\", \"getLikesAndDislikes\", \"getViews\"]\n[[], [0], [0, 0, 1], [0], [0], [0], [0]]\n<strong>Output</strong>\n[null, null, \"-1\", null, null, [-1], -1]\n\n<strong>Explanation</strong>\nVideoSharingPlatform videoSharingPlatform = new VideoSharingPlatform();\nvideoSharingPlatform.remove(0);              // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.watch(0, 0, 1);         // There is no video associated with videoId 0, so return \"-1\".\nvideoSharingPlatform.like(0);                // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.dislike(0);             // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.getLikesAndDislikes(0); // There is no video associated with videoId 0, so return [-1].\nvideoSharingPlatform.getViews(0);            // There is no video associated with videoId 0, so return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= video.length &lt;= 10<sup>5</sup></code></li>\n\t<li>The sum of <code>video.length</code> over all calls to <code>upload</code> does not exceed <code>10<sup>5</sup></code></li>\n\t<li><code>video</code> consists of digits.</li>\n\t<li><code>0 &lt;= videoId &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= startMinute &lt; endMinute &lt; 10<sup>5</sup></code></li>\n\t<li><code>startMinute &lt; video.length</code></li>\n\t<li>The sum of <code>endMinute - startMinute</code> over all calls to <code>watch</code> does not exceed <code>10<sup>5</sup></code>.</li>\n\t<li>At most <code>10<sup>5</sup></code> calls <strong>in total</strong> will be made to all functions.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "Stack", "Design", "Ordered Set"], "similarQuestions": [{"questionName": "Tweet Counts Per Frequency", "difficulty": "Medium"}, {"questionName": "Design Browser History", "difficulty": "Medium"}, {"questionName": "Most Popular Video Creator", "difficulty": "Medium"}], "problemName": "design-video-sharing-platform"}