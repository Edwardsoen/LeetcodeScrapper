{"tags": [], "problem": "<p>A <strong>value-equal</strong> string is a string where <strong>all</strong> characters are the same.</p>\n\n<ul>\n\t<li>For example, <code>\"1111\"</code> and <code>\"33\"</code> are value-equal strings.</li>\n\t<li>In contrast, <code>\"123\"</code> is not a value-equal string.</li>\n</ul>\n\n<p>Given a digit string <code>s</code>, decompose the string into some number of <strong>consecutive value-equal</strong> substrings where <strong>exactly one</strong> substring has a <strong>length of </strong><code>2</code> and the remaining substrings have a <strong>length of </strong><code>3</code>.</p>\n\n<p>Return <code>true</code><em> if you can decompose </em><code>s</code><em> according to the above rules. Otherwise, return </em><code>false</code>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters in a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"000111000\"\n<strong>Output:</strong> false\n<strong>Explanation: </strong>s cannot be decomposed according to the rules because [\"000\", \"111\", \"000\"] does not have a substring of length 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"00011111222\"\n<strong>Output:</strong> true\n<strong>Explanation: </strong>s can be decomposed into [\"000\", \"111\", \"11\", \"222\"].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"011100022233\"\n<strong>Output:</strong> false\n<strong>Explanation: </strong>s cannot be decomposed according to the rules because of the first '0'.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of only digits <code>'0'</code> through <code>'9'</code>.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "check-if-string-is-decomposable-into-value-equal-substrings"}