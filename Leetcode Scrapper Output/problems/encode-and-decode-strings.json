{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Facebook\n4"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n2"], ["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "LinkedIn\n2"], ["6 months - 1 year", "Square\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Microsoft\n3"], ["1 year - 2 years", "Uber\n3"]]}], "problem": "<p>Design an algorithm to encode <b>a list of strings</b> to <b>a string</b>. The encoded string is then sent over the network and is decoded back to the original list of strings.</p>\n\n<p>Machine 1 (sender) has the function:</p>\n\n<pre>string encode(vector&lt;string&gt; strs) {\n  // ... your code\n  return encoded_string;\n}</pre>\nMachine 2 (receiver) has the function:\n\n<pre>vector&lt;string&gt; decode(string s) {\n  //... your code\n  return strs;\n}\n</pre>\n\n<p>So Machine 1 does:</p>\n\n<pre>string encoded_string = encode(strs);\n</pre>\n\n<p>and Machine 2 does:</p>\n\n<pre>vector&lt;string&gt; strs2 = decode(encoded_string);\n</pre>\n\n<p><code>strs2</code> in Machine 2 should be the same as <code>strs</code> in Machine 1.</p>\n\n<p>Implement the <code>encode</code> and <code>decode</code> methods.</p>\n\n<p>You are not allowed to&nbsp;solve the problem using any serialize methods (such as <code>eval</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> dummy_input = [\"Hello\",\"World\"]\n<strong>Output:</strong> [\"Hello\",\"World\"]\n<strong>Explanation:</strong>\nMachine 1:\nCodec encoder = new Codec();\nString msg = encoder.encode(strs);\nMachine 1 ---msg---&gt; Machine 2\n\nMachine 2:\nCodec decoder = new Codec();\nString[] strs = decoder.decode(msg);\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> dummy_input = [\"\"]\n<strong>Output:</strong> [\"\"]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 200</code></li>\n\t<li><code>0 &lt;= strs[i].length &lt;= 200</code></li>\n\t<li><code>strs[i]</code> contains any possible characters out of <code>256</code> valid ASCII characters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up: </strong>Could you write a generalized algorithm to work on any possible set of characters?</p>\n", "relatedTopics": ["Array", "String", "Design"], "similarQuestions": [{"questionName": "Count and Say", "difficulty": "Medium"}, {"questionName": "Serialize and Deserialize Binary Tree", "difficulty": "Hard"}, {"questionName": "String Compression", "difficulty": "Medium"}, {"questionName": "Count Binary Substrings", "difficulty": "Easy"}], "problemName": "encode-and-decode-strings"}