{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Microsoft\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n5"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "DE Shaw\n3"], ["1 year - 2 years", "Grab\n2"], ["1 year - 2 years", "Adobe\n2"], ["1 year - 2 years", "Wayfair"]]}], "problem": "<p>A string <code>s</code> is called <strong>happy</strong> if it satisfies the following conditions:</p>\n\n<ul>\n\t<li><code>s</code> only contains the letters <code>'a'</code>, <code>'b'</code>, and <code>'c'</code>.</li>\n\t<li><code>s</code> does not contain any of <code>\"aaa\"</code>, <code>\"bbb\"</code>, or <code>\"ccc\"</code> as a substring.</li>\n\t<li><code>s</code> contains <strong>at most</strong> <code>a</code> occurrences of the letter <code>'a'</code>.</li>\n\t<li><code>s</code> contains <strong>at most</strong> <code>b</code> occurrences of the letter <code>'b'</code>.</li>\n\t<li><code>s</code> contains <strong>at most</strong> <code>c</code> occurrences of the letter <code>'c'</code>.</li>\n</ul>\n\n<p>Given three integers <code>a</code>, <code>b</code>, and <code>c</code>, return <em>the <strong>longest possible happy </strong>string</em>. If there are multiple longest happy strings, return <em>any of them</em>. If there is no such string, return <em>the empty string </em><code>\"\"</code>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> a = 1, b = 1, c = 7\n<strong>Output:</strong> \"ccaccbcc\"\n<strong>Explanation:</strong> \"ccbccacc\" would also be a correct answer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> a = 7, b = 1, c = 0\n<strong>Output:</strong> \"aabaa\"\n<strong>Explanation:</strong> It is the only correct answer in this case.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= a, b, c &lt;= 100</code></li>\n\t<li><code>a + b + c &gt; 0</code></li>\n</ul>\n", "relatedTopics": ["String", "Greedy", "Heap (Priority Queue)"], "similarQuestions": [{"questionName": "Reorganize String", "difficulty": "Medium"}], "problemName": "longest-happy-string"}