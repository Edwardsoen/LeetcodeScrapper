{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Amazon\n2"]]}], "problem": "<p>There is an intersection of two roads. First road is road A where cars travel&nbsp;from North to South in direction 1 and from South to North in direction 2. Second road is road B where cars travel from West to East in direction 3 and from East to West in direction 4.</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/11/exp.png\" style=\"width: 600px; height: 417px;\"></p>\n\n<p>There is a traffic light&nbsp;located on each road before the intersection. A traffic light&nbsp;can&nbsp;either be green or red.</p>\n\n<ol>\n\t<li><strong>Green</strong> means&nbsp;cars can cross the intersection&nbsp;in both directions of the road.</li>\n\t<li><strong>Red</strong> means cars in both directions cannot cross the intersection and must wait until the light turns green.</li>\n</ol>\n\n<p>The traffic lights cannot be green on both roads at the same time. That means when the light is green on road A, it is red on&nbsp;road B and when the light is green on road B, it is red on&nbsp;road A.</p>\n\n<p>Initially, the traffic light is <strong>green</strong> on road A and <strong>red</strong>&nbsp;on road B. When the light is green on one road, all cars can cross the intersection in both directions until the light becomes green on the other road.&nbsp;No two cars traveling on different roads should cross at the same time.</p>\n\n<p>Design a deadlock-free&nbsp;traffic light controlled system at this intersection.</p>\n\n<p>Implement the function&nbsp;<code>void carArrived(carId, roadId, direction, turnGreen, crossCar)</code> where:</p>\n\n<ul>\n\t<li><code>carId</code>&nbsp;is the id of the car that arrived.</li>\n\t<li><code>roadId</code>&nbsp;is the id of the road that the car travels&nbsp;on.</li>\n\t<li><code>direction</code>&nbsp;is the direction of the car.</li>\n\t<li><code>turnGreen</code>&nbsp;is a function you can call to turn the traffic light to green on the current road.</li>\n\t<li><code>crossCar</code>&nbsp;is a function you can call to let the current car cross the intersection.</li>\n</ul>\n\n<p>Your answer is considered correct if it avoids cars deadlock in the intersection.&nbsp;Turning the light green on a road when it was already green is considered a&nbsp;wrong answer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> cars = [1,3,5,2,4], directions = [2,1,2,4,3], arrivalTimes = [10,20,30,40,50]\n<strong>Output:</strong> [\n\"Car 1 Has Passed Road A In Direction 2\",    // Traffic light on road A is green, car 1 can cross the intersection.\n\"Car 3 Has Passed Road A In Direction 1\",    // Car 3 crosses the intersection as the light is still green.\n\"Car 5 Has Passed Road A In Direction 2\",    // Car 5 crosses the intersection as the light is still green.\n\"Traffic Light On Road B Is Green\",          // Car 2 requests green light for road B.\n\"Car 2 Has Passed Road B In Direction 4\",    // Car 2 crosses as the light is green on road B now.\n\"Car 4 Has Passed Road B In Direction 3\"     // Car 4 crosses the intersection as the light is still green.\n]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> cars = [1,2,3,4,5], directions = [2,4,3,3,1], arrivalTimes = [10,20,30,40,40]\n<strong>Output:</strong> [\n\"Car 1 Has Passed Road A In Direction 2\",    // Traffic light on road A is green, car 1 can cross the intersection.\n\"Traffic Light On Road B Is Green\",          // Car 2 requests green light for road B.\n\"Car 2 Has Passed Road B In Direction 4\",    // Car 2 crosses as the light is green on road B now.\n\"Car 3 Has Passed Road B In Direction 3\",    // Car 3 crosses as the light is green on road B now.\n\"Traffic Light On Road A Is Green\",          // Car 5 requests green light for road A.\n\"Car 5 Has Passed Road A In Direction 1\",    // Car 5 crosses as the light is green on road A now.\n\"Traffic Light On Road B Is Green\",          // Car 4 requests green light for road B. Car 4 blocked until car 5 crosses and then traffic light is green on road B.\n\"Car 4 Has Passed Road B In Direction 3\"     // Car 4 crosses as the light is green on road B now.\n]\n<strong>Explanation:</strong> This is a dead-lock free scenario. Note that the scenario when car 4 crosses before turning light into green on road A and allowing car 5 to pass is also <strong>correct</strong> and <strong>Accepted</strong> scenario.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= cars.length &lt;= 20</code></li>\n\t<li><code>cars.length = directions.length</code></li>\n\t<li><code>cars.length = arrivalTimes.length</code></li>\n\t<li>All values of <code>cars</code> are unique</li>\n\t<li><code>1 &lt;= directions[i] &lt;= 4</code></li>\n\t<li><code>arrivalTimes</code> is non-decreasing</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "traffic-light-controlled-intersection"}