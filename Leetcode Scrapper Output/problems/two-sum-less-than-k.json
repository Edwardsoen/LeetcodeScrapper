{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "TikTok\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Capital One\n4"], ["6 months - 1 year", "Amazon\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Facebook\n5"]]}], "problem": "<p>Given an array <code>nums</code> of integers and&nbsp;integer <code>k</code>, return the maximum <code>sum</code> such that there exists <code>i &lt; j</code> with <code>nums[i] + nums[j] = sum</code> and <code>sum &lt; k</code>. If no <code>i</code>, <code>j</code> exist satisfying this equation, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [34,23,1,24,75,33,54,8], k = 60\n<strong>Output:</strong> 58\n<strong>Explanation: </strong>We can use 34 and 24 to sum 58 which is less than 60.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [10,20,30], k = 15\n<strong>Output:</strong> -1\n<strong>Explanation: </strong>In this case it is not possible to get a pair sum less that 15.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= k &lt;= 2000</code></li>\n</ul>\n", "relatedTopics": ["Array", "Two Pointers", "Binary Search", "Sorting"], "similarQuestions": [], "problemName": "two-sum-less-than-k"}