{"tags": [], "problem": "<p>Given two positive integers <code>n</code> and <code>k</code>, the binary string <code>S<sub>n</sub></code> is formed as follows:</p>\n\n<ul>\n\t<li><code>S<sub>1</sub> = \"0\"</code></li>\n\t<li><code>S<sub>i</sub> = S<sub>i - 1</sub> + \"1\" + reverse(invert(S<sub>i - 1</sub>))</code> for <code>i &gt; 1</code></li>\n</ul>\n\n<p>Where <code>+</code> denotes the concatenation operation, <code>reverse(x)</code> returns the reversed string <code>x</code>, and <code>invert(x)</code> inverts all the bits in <code>x</code> (<code>0</code> changes to <code>1</code> and <code>1</code> changes to <code>0</code>).</p>\n\n<p>For example, the first four strings in the above sequence are:</p>\n\n<ul>\n\t<li><code>S<sub>1 </sub>= \"0\"</code></li>\n\t<li><code>S<sub>2 </sub>= \"0<strong>1</strong>1\"</code></li>\n\t<li><code>S<sub>3 </sub>= \"011<strong>1</strong>001\"</code></li>\n\t<li><code>S<sub>4</sub> = \"0111001<strong>1</strong>0110001\"</code></li>\n</ul>\n\n<p>Return <em>the</em> <code>k<sup>th</sup></code> <em>bit</em> <em>in</em> <code>S<sub>n</sub></code>. It is guaranteed that <code>k</code> is valid for the given <code>n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"0\"\n<strong>Explanation:</strong> S<sub>3</sub> is \"<strong><u>0</u></strong>111001\".\nThe 1<sup>st</sup> bit is \"0\".\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> n = 4, k = 11\n<strong>Output:</strong> \"1\"\n<strong>Explanation:</strong> S<sub>4</sub> is \"0111001101<strong><u>1</u></strong>0001\".\nThe 11<sup>th</sup> bit is \"1\".\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= k &lt;= 2<sup>n</sup> - 1</code></li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "find-kth-bit-in-nth-binary-string"}