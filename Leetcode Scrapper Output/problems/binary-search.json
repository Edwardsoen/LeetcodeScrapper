{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Apple\n9"], ["0 - 6 months", "Google\n5"], ["0 - 6 months", "Adobe\n4"], ["0 - 6 months", "Amazon\n3"], ["0 - 6 months", "Uber\n3"], ["0 - 6 months", "Facebook\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n7"], ["6 months - 1 year", "Yahoo\n3"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "tcs\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "SAP\n4"], ["1 year - 2 years", "Yandex\n2"], ["1 year - 2 years", "Oracle\n2"], ["1 year - 2 years", "Samsung\n2"], ["1 year - 2 years", "Goldman Sachs\n2"], ["1 year - 2 years", "Infosys\n2"]]}], "problem": "<p>Given an array of integers <code>nums</code> which is sorted in ascending order, and an integer <code>target</code>, write a function to search <code>target</code> in <code>nums</code>. If <code>target</code> exists, then return its index. Otherwise, return <code>-1</code>.</p>\n\n<p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [-1,0,3,5,9,12], target = 9\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 9 exists in nums and its index is 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [-1,0,3,5,9,12], target = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 2 does not exist in nums so return -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt; nums[i], target &lt; 10<sup>4</sup></code></li>\n\t<li>All the integers in <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is sorted in ascending order.</li>\n</ul>\n", "relatedTopics": ["Array", "Binary Search"], "similarQuestions": [], "problemName": "binary-search"}