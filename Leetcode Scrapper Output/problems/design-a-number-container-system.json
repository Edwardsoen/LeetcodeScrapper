{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google"]]}], "problem": "<p>Design a number container system that can do the following:</p>\n\n<ul>\n\t<li><strong>Insert </strong>or <strong>Replace</strong> a number at the given index in the system.</li>\n\t<li><strong>Return </strong>the smallest index for the given number in the system.</li>\n</ul>\n\n<p>Implement the <code>NumberContainers</code> class:</p>\n\n<ul>\n\t<li><code>NumberContainers()</code> Initializes the number container system.</li>\n\t<li><code>void change(int index, int number)</code> Fills the container at <code>index</code> with the <code>number</code>. If there is already a number at that <code>index</code>, replace it.</li>\n\t<li><code>int find(int number)</code> Returns the smallest index for the given <code>number</code>, or <code>-1</code> if there is no index that is filled by <code>number</code> in the system.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input</strong>\n[\"NumberContainers\", \"find\", \"change\", \"change\", \"change\", \"change\", \"find\", \"change\", \"find\"]\n[[], [10], [2, 10], [1, 10], [3, 10], [5, 10], [10], [1, 20], [10]]\n<strong>Output</strong>\n[null, -1, null, null, null, null, 1, null, 2]\n\n<strong>Explanation</strong>\nNumberContainers nc = new NumberContainers();\nnc.find(10); // There is no index that is filled with number 10. Therefore, we return -1.\nnc.change(2, 10); // Your container at index 2 will be filled with number 10.\nnc.change(1, 10); // Your container at index 1 will be filled with number 10.\nnc.change(3, 10); // Your container at index 3 will be filled with number 10.\nnc.change(5, 10); // Your container at index 5 will be filled with number 10.\nnc.find(10); // Number 10 is at the indices 1, 2, 3, and 5. Since the smallest index that is filled with 10 is 1, we return 1.\nnc.change(1, 20); // Your container at index 1 will be filled with number 20. Note that index 1 was filled with 10 and then replaced with 20. \nnc.find(10); // Number 10 is at the indices 2, 3, and 5. The smallest index that is filled with 10 is 2. Therefore, we return 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= index, number &lt;= 10<sup>9</sup></code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made <strong>in total</strong> to <code>change</code> and <code>find</code>.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "Design", "Heap (Priority Queue)", "Ordered Set"], "similarQuestions": [{"questionName": "Seat Reservation Manager", "difficulty": "Medium"}, {"questionName": "Design a Food Rating System", "difficulty": "Medium"}], "problemName": "design-a-number-container-system"}