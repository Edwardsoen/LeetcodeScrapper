{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n9"], ["0 - 6 months", "Apple\n4"], ["0 - 6 months", "Lyft\n4"], ["0 - 6 months", "Airbnb\n3"], ["0 - 6 months", "Yandex\n2"], ["0 - 6 months", "Oracle\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n17"], ["6 months - 1 year", "LinkedIn\n8"], ["6 months - 1 year", "Microsoft\n8"], ["6 months - 1 year", "Adobe\n7"], ["6 months - 1 year", "Google\n4"], ["6 months - 1 year", "Spotify\n3"], ["6 months - 1 year", "Uber\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Snapchat\n8"], ["1 year - 2 years", "ByteDance\n4"], ["1 year - 2 years", "Bloomberg\n3"], ["1 year - 2 years", "Flipkart\n3"], ["1 year - 2 years", "Nagarro\n3"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Visa\n2"], ["1 year - 2 years", "TikTok\n2"], ["1 year - 2 years", "SAP\n2"], ["1 year - 2 years", "Qualtrics\n2"]]}], "problem": "<p>Given two strings <code>s</code> and <code>t</code> of lengths <code>m</code> and <code>n</code> respectively, return <em>the <strong>minimum window</strong></em> <span data-keyword=\"substring-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-10\" aria-expanded=\"false\" data-headlessui-state=\"\"><strong><em>substring</em></strong></div></div></div></span><em> of </em><code>s</code><em> such that every character in </em><code>t</code><em> (<strong>including duplicates</strong>) is included in the window</em>. If there is no such substring, return <em>the empty string </em><code>\"\"</code>.</p>\n\n<p>The testcases will be generated such that the answer is <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"ADOBECODEBANC\", t = \"ABC\"\n<strong>Output:</strong> \"BANC\"\n<strong>Explanation:</strong> The minimum window substring \"BANC\" includes 'A', 'B', and 'C' from string t.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"a\", t = \"a\"\n<strong>Output:</strong> \"a\"\n<strong>Explanation:</strong> The entire string s is the minimum window.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"a\", t = \"aa\"\n<strong>Output:</strong> \"\"\n<strong>Explanation:</strong> Both 'a's from t must be included in the window.\nSince the largest window of s only has one 'a', return empty string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == s.length</code></li>\n\t<li><code>n == t.length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> and <code>t</code> consist of uppercase and lowercase English letters.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you find an algorithm that runs in <code>O(m + n)</code> time?</p>\n", "relatedTopics": ["Hash Table", "String", "Sliding Window"], "similarQuestions": [], "problemName": "minimum-window-substring"}