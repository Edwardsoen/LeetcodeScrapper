{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n5"], ["6 months - 1 year", "Google\n4"], ["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "TikTok\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Apple\n5"], ["1 year - 2 years", "ByteDance\n5"], ["1 year - 2 years", "Snapchat\n2"], ["1 year - 2 years", "Wish\n2"], ["1 year - 2 years", "Bloomberg\n2"], ["1 year - 2 years", "Salesforce\n2"]]}], "problem": "<p>A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\n\n<p>Given a list of <code>stones</code>' positions (in units) in sorted <strong>ascending order</strong>, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be <code>1</code> unit.</p>\n\n<p>If the frog's last jump was <code>k</code> units, its next jump must be either <code>k - 1</code>, <code>k</code>, or <code>k + 1</code> units. The frog can only jump in the forward direction.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> stones = [0,1,3,5,6,8,12,17]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The frog can jump to the last stone by jumping 1 unit to the 2nd stone, then 2 units to the 3rd stone, then 2 units to the 4th stone, then 3 units to the 6th stone, 4 units to the 7th stone, and 5 units to the 8th stone.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> stones = [0,1,2,3,4,8,9,11]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no way to jump to the last stone as the gap between the 5th and 6th stone is too large.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= stones.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= stones[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>stones[0] == 0</code></li>\n\t<li><code>stones</code>&nbsp;is sorted in a strictly increasing order.</li>\n</ul>\n", "relatedTopics": ["Array", "Dynamic Programming"], "similarQuestions": [{"questionName": "Minimum Sideway Jumps", "difficulty": "Medium"}, {"questionName": "Solving Questions With Brainpower", "difficulty": "Medium"}], "problemName": "frog-jump"}