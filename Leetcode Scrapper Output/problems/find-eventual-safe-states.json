{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Bloomberg\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Adobe\n3"], ["1 year - 2 years", "MindTickle\n3"], ["1 year - 2 years", "Google"]]}], "problem": "<p>There is a directed graph of <code>n</code> nodes with each node labeled from <code>0</code> to <code>n - 1</code>. The graph is represented by a <strong>0-indexed</strong> 2D integer array <code>graph</code> where <code>graph[i]</code> is an integer array of nodes adjacent to node <code>i</code>, meaning there is an edge from node <code>i</code> to each node in <code>graph[i]</code>.</p>\n\n<p>A node is a <strong>terminal node</strong> if there are no outgoing edges. A node is a <strong>safe node</strong> if every possible path starting from that node leads to a <strong>terminal node</strong> (or another safe node).</p>\n\n<p>Return <em>an array containing all the <strong>safe nodes</strong> of the graph</em>. The answer should be sorted in <strong>ascending</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"Illustration of graph\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/17/picture1.png\" style=\"height: 171px; width: 600px;\">\n<pre><strong>Input:</strong> graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>Output:</strong> [2,4,5,6]\n<strong>Explanation:</strong> The given graph is shown above.\nNodes 5 and 6 are terminal nodes as there are no outgoing edges from either of them.\nEvery path starting at nodes 2, 4, 5, and 6 all lead to either node 5 or 6.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]\n<strong>Output:</strong> [4]\n<strong>Explanation:</strong>\nOnly node 4 is a terminal node, and every path starting at node 4 leads to node 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == graph.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= graph[i].length &lt;= n</code></li>\n\t<li><code>0 &lt;= graph[i][j] &lt;= n - 1</code></li>\n\t<li><code>graph[i]</code> is sorted in a strictly increasing order.</li>\n\t<li>The graph may contain self-loops.</li>\n\t<li>The number of edges in the graph will be in the range <code>[1, 4 * 10<sup>4</sup>]</code>.</li>\n</ul>\n", "relatedTopics": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"], "similarQuestions": [{"questionName": "Build a Matrix With Conditions", "difficulty": "Hard"}], "problemName": "find-eventual-safe-states"}