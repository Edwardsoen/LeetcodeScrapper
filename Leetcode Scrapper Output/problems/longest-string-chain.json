{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n7"], ["0 - 6 months", "Amazon\n3"], ["0 - 6 months", "Lucid\n3"], ["0 - 6 months", "Bloomberg\n2"], ["0 - 6 months", "Mathworks\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "TikTok\n3"], ["6 months - 1 year", "Oracle\n2"], ["6 months - 1 year", "Apple\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Two Sigma\n24"], ["1 year - 2 years", "ByteDance\n4"], ["1 year - 2 years", "Facebook\n3"], ["1 year - 2 years", "Microsoft\n2"], ["1 year - 2 years", "Zoom\n2"], ["1 year - 2 years", "Flipkart\n2"], ["1 year - 2 years", "Wix"]]}], "problem": "<p>You are given an array of <code>words</code> where each word consists of lowercase English letters.</p>\n\n<p><code>word<sub>A</sub></code> is a <strong>predecessor</strong> of <code>word<sub>B</sub></code> if and only if we can insert <strong>exactly one</strong> letter anywhere in <code>word<sub>A</sub></code> <strong>without changing the order of the other characters</strong> to make it equal to <code>word<sub>B</sub></code>.</p>\n\n<ul>\n\t<li>For example, <code>\"abc\"</code> is a <strong>predecessor</strong> of <code>\"ab<u>a</u>c\"</code>, while <code>\"cba\"</code> is not a <strong>predecessor</strong> of <code>\"bcad\"</code>.</li>\n</ul>\n\n<p>A <strong>word chain</strong><em> </em>is a sequence of words <code>[word<sub>1</sub>, word<sub>2</sub>, ..., word<sub>k</sub>]</code> with <code>k &gt;= 1</code>, where <code>word<sub>1</sub></code> is a <strong>predecessor</strong> of <code>word<sub>2</sub></code>, <code>word<sub>2</sub></code> is a <strong>predecessor</strong> of <code>word<sub>3</sub></code>, and so on. A single word is trivially a <strong>word chain</strong> with <code>k == 1</code>.</p>\n\n<p>Return <em>the <strong>length</strong> of the <strong>longest possible word chain</strong> with words chosen from the given list of </em><code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: One of the longest word chains is [\"a\",\"<u>b</u>a\",\"b<u>d</u>a\",\"bd<u>c</u>a\"].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> All the words can be put in a word chain [\"xb\", \"xb<u>c</u>\", \"<u>c</u>xbc\", \"<u>p</u>cxbc\", \"pcxbc<u>f</u>\"].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"abcd\",\"dbqca\"]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The trivial word chain [\"abcd\"] is one of the longest word chains.\n[\"abcd\",\"dbqca\"] is not a valid word chain because the ordering of the letters is changed.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code> only consists of lowercase English letters.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "longest-string-chain"}