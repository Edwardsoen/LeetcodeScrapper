{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Yandex\n5"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Amazon\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Apple\n4"], ["6 months - 1 year", "Facebook\n2"], ["6 months - 1 year", "Google\n2"], ["6 months - 1 year", "Oracle\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Adobe\n3"], ["1 year - 2 years", "Bloomberg\n3"], ["1 year - 2 years", "ByteDance\n2"], ["1 year - 2 years", "ShareChat\n2"]]}], "problem": "<p>Given two strings <code>s1</code> and <code>s2</code>, return <code>true</code><em> if </em><code>s2</code><em> contains a permutation of </em><code>s1</code><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>In other words, return <code>true</code> if one of <code>s1</code>'s permutations is the substring of <code>s2</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"ab\", s2 = \"eidbaooo\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> s2 contains one permutation of s1 (\"ba\").\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s1 = \"ab\", s2 = \"eidboaoo\"\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s1.length, s2.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "Two Pointers", "String", "Sliding Window"], "similarQuestions": [{"questionName": "Minimum Window Substring", "difficulty": "Hard"}, {"questionName": "Find All Anagrams in a String", "difficulty": "Medium"}], "problemName": "permutation-in-string"}