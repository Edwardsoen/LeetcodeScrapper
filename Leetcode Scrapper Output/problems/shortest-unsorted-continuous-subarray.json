{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n2"], ["6 months - 1 year", "Yandex\n2"], ["6 months - 1 year", "Uber\n2"], ["6 months - 1 year", "MakeMyTrip\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Facebook\n6"], ["1 year - 2 years", "Oracle\n3"], ["1 year - 2 years", "Adobe\n3"], ["1 year - 2 years", "Google\n2"], ["1 year - 2 years", "JPMorgan\n2"], ["1 year - 2 years", "LiveRamp"]]}], "problem": "<p>Given an integer array <code>nums</code>, you need to find one <b>continuous subarray</b> that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.</p>\n\n<p>Return <em>the shortest such subarray and output its length</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [2,6,4,8,10,9,15]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Can you solve it in <code>O(n)</code> time complexity?", "relatedTopics": [], "similarQuestions": [], "problemName": "shortest-unsorted-continuous-subarray"}