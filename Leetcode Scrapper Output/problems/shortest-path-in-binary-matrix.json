{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Facebook\n8"], ["0 - 6 months", "Amazon\n5"], ["0 - 6 months", "Google\n4"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n4"], ["6 months - 1 year", "Adobe\n4"], ["6 months - 1 year", "Snapchat\n3"], ["6 months - 1 year", "Samsung\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n3"], ["1 year - 2 years", "Bloomberg\n3"], ["1 year - 2 years", "JPMorgan\n2"]]}], "problem": "<p>Given an <code>n x n</code> binary matrix <code>grid</code>, return <em>the length of the shortest <strong>clear path</strong> in the matrix</em>. If there is no clear path, return <code>-1</code>.</p>\n\n<p>A <strong>clear path</strong> in a binary matrix is a path from the <strong>top-left</strong> cell (i.e., <code>(0, 0)</code>) to the <strong>bottom-right</strong> cell (i.e., <code>(n - 1, n - 1)</code>) such that:</p>\n\n<ul>\n\t<li>All the visited cells of the path are <code>0</code>.</li>\n\t<li>All the adjacent cells of the path are <strong>8-directionally</strong> connected (i.e., they are different and they share an edge or a corner).</li>\n</ul>\n\n<p>The <strong>length of a clear path</strong> is the number of visited cells of this path.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/example1_1.png\" style=\"width: 500px; height: 234px;\">\n<pre><strong>Input:</strong> grid = [[0,1],[1,0]]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/example2_1.png\" style=\"height: 216px; width: 500px;\">\n<pre><strong>Input:</strong> grid = [[0,0,0],[1,1,0],[1,1,0]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> grid = [[1,0,0],[1,1,0],[1,1,0]]\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>grid[i][j] is 0 or 1</code></li>\n</ul>\n", "relatedTopics": ["Array", "Breadth-First Search", "Matrix"], "similarQuestions": [{"questionName": "Paths in Matrix Whose Sum Is Divisible by K", "difficulty": "Hard"}], "problemName": "shortest-path-in-binary-matrix"}