{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n8"], ["6 months - 1 year", "TikTok\n3"], ["6 months - 1 year", "Yahoo\n2"], ["6 months - 1 year", "Bloomberg\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n4"], ["1 year - 2 years", "Microsoft\n3"], ["1 year - 2 years", "Apple\n3"], ["1 year - 2 years", "Adobe\n2"], ["1 year - 2 years", "Shopee\n2"]]}], "problem": "<p>Given an <code>m x n</code> matrix <code>board</code> containing <code>'X'</code> and <code>'O'</code>, <em>capture all regions that are 4-directionally&nbsp;surrounded by</em> <code>'X'</code>.</p>\n\n<p>A region is <strong>captured</strong> by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg\" style=\"width: 550px; height: 237px;\">\n<pre><strong>Input:</strong> board = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n<strong>Output:</strong> [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n<strong>Explanation:</strong> Notice that an 'O' should not be flipped if:\n- It is on the border, or\n- It is adjacent to an 'O' that should not be flipped.\nThe bottom 'O' is on the border, so it is not flipped.\nThe other three 'O' form a surrounded region, so they are flipped.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> board = [[\"X\"]]\n<strong>Output:</strong> [[\"X\"]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>board[i][j]</code> is <code>'X'</code> or <code>'O'</code>.</li>\n</ul>\n", "relatedTopics": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"], "similarQuestions": [], "problemName": "surrounded-regions"}