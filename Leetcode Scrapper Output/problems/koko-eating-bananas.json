{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n8"], ["0 - 6 months", "Google\n3"], ["0 - 6 months", "eBay\n2"], ["0 - 6 months", "Salesforce\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "DoorDash\n6"], ["6 months - 1 year", "Facebook\n4"], ["6 months - 1 year", "Bloomberg\n4"], ["6 months - 1 year", "Arcesium\n3"], ["6 months - 1 year", "Apple\n2"], ["6 months - 1 year", "TikTok\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Airbnb\n13"], ["1 year - 2 years", "Uber\n2"], ["1 year - 2 years", "epiFi\n2"], ["1 year - 2 years", "McKinsey\n2"]]}], "problem": "<p>Koko loves to eat bananas. There are <code>n</code> piles of bananas, the <code>i<sup>th</sup></code> pile has <code>piles[i]</code> bananas. The guards have gone and will come back in <code>h</code> hours.</p>\n\n<p>Koko can decide her bananas-per-hour eating speed of <code>k</code>. Each hour, she chooses some pile of bananas and eats <code>k</code> bananas from that pile. If the pile has less than <code>k</code> bananas, she eats all of them instead and will not eat any more bananas during this hour.</p>\n\n<p>Koko likes to eat slowly but still wants to finish eating all the bananas before the guards return.</p>\n\n<p>Return <em>the minimum integer</em> <code>k</code> <em>such that she can eat all the bananas within</em> <code>h</code> <em>hours</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> piles = [3,6,7,11], h = 8\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> piles = [30,11,23,4,20], h = 5\n<strong>Output:</strong> 30\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> piles = [30,11,23,4,20], h = 6\n<strong>Output:</strong> 23\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>piles.length &lt;= h &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Binary Search"], "similarQuestions": [], "problemName": "koko-eating-bananas"}