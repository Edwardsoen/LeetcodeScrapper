{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n5"]]}], "problem": "<p><em>(This problem is an <strong>interactive problem</strong>.)</em></p>\n\n<p>Each ship is located at an integer point on the sea represented by a cartesian plane, and each integer point may contain at most 1 ship.</p>\n\n<p>You have a function <code>Sea.hasShips(topRight, bottomLeft)</code> which takes two points as arguments and returns <code>true</code> If there is at least one ship in the rectangle represented by the two points, including on the boundary.</p>\n\n<p>Given two points: the top right and bottom left corners of a rectangle, return the number of ships present in that rectangle. It is guaranteed that there are <strong>at most 10 ships</strong> in that rectangle.</p>\n\n<p>Submissions making <strong>more than 400 calls</strong> to <code>hasShips</code> will be judged <em>Wrong Answer</em>. Also, any solutions that attempt to circumvent the judge will result in disqualification.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example :</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/26/1445_example_1.PNG\" style=\"width: 496px; height: 500px;\">\n<pre><strong>Input:</strong> \nships = [[1,1],[2,2],[3,3],[5,5]], topRight = [4,4], bottomLeft = [0,0]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> From [0,0] to [4,4] we can count 3 ships within the range.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> ans = [[1,1],[2,2],[3,3]], topRight = [1000,1000], bottomLeft = [0,0]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>On the input <code>ships</code> is only given to initialize the map internally. You must solve this problem \"blindfolded\". In other words, you must find the answer using the given <code>hasShips</code> API, without knowing the <code>ships</code> position.</li>\n\t<li><code>0 &lt;= bottomLeft[0] &lt;= topRight[0] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= bottomLeft[1] &lt;= topRight[1] &lt;= 1000</code></li>\n\t<li><code>topRight != bottomLeft</code></li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "number-of-ships-in-a-rectangle"}