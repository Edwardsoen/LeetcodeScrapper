{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Apple\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n3"], ["6 months - 1 year", "ByteDance\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "TikTok\n2"], ["1 year - 2 years", "Google"]]}], "problem": "<p>You would like to make dessert and are preparing to buy the ingredients. You have <code>n</code> ice cream base flavors and <code>m</code> types of toppings to choose from. You must follow these rules when making your dessert:</p>\n\n<ul>\n\t<li>There must be <strong>exactly one</strong> ice cream base.</li>\n\t<li>You can add <strong>one or more</strong> types of topping or have no toppings at all.</li>\n\t<li>There are <strong>at most two</strong> of <strong>each type</strong> of topping.</li>\n</ul>\n\n<p>You are given three inputs:</p>\n\n<ul>\n\t<li><code>baseCosts</code>, an integer array of length <code>n</code>, where each <code>baseCosts[i]</code> represents the price of the <code>i<sup>th</sup></code> ice cream base flavor.</li>\n\t<li><code>toppingCosts</code>, an integer array of length <code>m</code>, where each <code>toppingCosts[i]</code> is the price of <strong>one</strong> of the <code>i<sup>th</sup></code> topping.</li>\n\t<li><code>target</code>, an integer representing your target price for dessert.</li>\n</ul>\n\n<p>You want to make a dessert with a total cost as close to <code>target</code> as possible.</p>\n\n<p>Return <em>the closest possible cost of the dessert to </em><code>target</code>. If there are multiple, return <em>the <strong>lower</strong> one.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> baseCosts = [1,7], toppingCosts = [3,4], target = 10\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Consider the following combination (all 0-indexed):\n- Choose base 1: cost 7\n- Take 1 of topping 0: cost 1 x 3 = 3\n- Take 0 of topping 1: cost 0 x 4 = 0\nTotal: 7 + 3 + 0 = 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> baseCosts = [2,3], toppingCosts = [4,5,100], target = 18\n<strong>Output:</strong> 17\n<strong>Explanation:</strong> Consider the following combination (all 0-indexed):\n- Choose base 1: cost 3\n- Take 1 of topping 0: cost 1 x 4 = 4\n- Take 2 of topping 1: cost 2 x 5 = 10\n- Take 0 of topping 2: cost 0 x 100 = 0\nTotal: 3 + 4 + 10 + 0 = 17. You cannot make a dessert with a total cost of 18.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> baseCosts = [3,10], toppingCosts = [2,5], target = 9\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> It is possible to make desserts with cost 8 and 10. Return 8 as it is the lower cost.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == baseCosts.length</code></li>\n\t<li><code>m == toppingCosts.length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 10</code></li>\n\t<li><code>1 &lt;= baseCosts[i], toppingCosts[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "closest-dessert-cost"}