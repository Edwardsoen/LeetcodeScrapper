{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Sony"]]}], "problem": "<p>A <strong>Fibonacci</strong> tree is a binary tree created using the order function <code>order(n)</code>:</p>\n\n<ul>\n\t<li><code>order(0)</code> is the empty tree.</li>\n\t<li><code>order(1)</code> is a binary tree with only <strong>one node</strong>.</li>\n\t<li><code>order(n)</code> is a binary tree that consists of a root node with the left subtree as <code>order(n - 2)</code> and the right subtree as <code>order(n - 1)</code>.</li>\n</ul>\n\n<p>Alice and Bob are playing a game with a <strong>Fibonacci</strong> tree with Alice staring first. On each turn, a player selects a node and removes that node <strong>and</strong> its subtree. The player that is forced to delete <code>root</code> loses.</p>\n\n<p>Given the integer <code>n</code>, return <code>true</code> if Alice wins the game or <code>false</code> if Bob wins, assuming both players play optimally.</p>\n\n<p>A subtree of a binary tree <code>tree</code> is a tree that consists of a node in <code>tree</code> and all of this node's descendants. The tree <code>tree</code> could also be considered as a subtree of itself.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong><br>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/14/image-20210914173520-3.png\" style=\"width: 200px; height: 184px;\"></p>\n\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nAlice takes the node 1 in the right subtree.\nBob takes either the 1 in the left subtree or the 2 in the right subtree.\nAlice takes whichever node Bob doesn't take.\nBob is forced to take the root node 3, so Bob will lose.\nReturn true because Alice wins.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong><br>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/14/image-20210914173634-4.png\" style=\"width: 75px; height: 75px;\"></p>\n\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\nAlice is forced to take the root node 1, so Alice will lose.\nReturn false because Alice loses.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong><br>\n<img src=\"https://assets.leetcode.com/uploads/2021/09/14/image-20210914173425-1.png\" style=\"width: 100px; height: 106px;\"></p>\n\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nAlice takes the node 1.\nBob is forced to take the root node 2, so Bob will lose.\nReturn true because Alice wins.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n</ul>\n", "relatedTopics": ["Math", "Dynamic Programming", "Tree", "Binary Tree", "Game Theory"], "similarQuestions": [], "problemName": "subtree-removal-game-with-fibonacci-tree"}