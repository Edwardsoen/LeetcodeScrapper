{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n2"], ["0 - 6 months", "TikTok\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "LinkedIn\n7"], ["6 months - 1 year", "Google\n4"], ["6 months - 1 year", "Amazon\n3"], ["6 months - 1 year", "Microsoft\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Coupang\n3"], ["1 year - 2 years", "Qualtrics\n2"], ["1 year - 2 years", "Facebook"], ["1 year - 2 years", "Zenefits"]]}], "problem": "<p>You have a graph of <code>n</code> nodes labeled from <code>0</code> to <code>n - 1</code>. You are given an integer n and a list of <code>edges</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an undirected edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> in the graph.</p>\n\n<p>Return <code>true</code> <em>if the edges of the given graph make up a valid tree, and</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/12/tree1-graph.jpg\" style=\"width: 222px; height: 302px;\">\n<pre><strong>Input:</strong> n = 5, edges = [[0,1],[0,2],[0,3],[1,4]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/12/tree2-graph.jpg\" style=\"width: 382px; height: 222px;\">\n<pre><strong>Input:</strong> n = 5, edges = [[0,1],[1,2],[2,3],[1,3],[1,4]]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2000</code></li>\n\t<li><code>0 &lt;= edges.length &lt;= 5000</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no self-loops or repeated edges.</li>\n</ul>\n", "relatedTopics": ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"], "similarQuestions": [], "problemName": "graph-valid-tree"}