{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "ByteDance\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n4"], ["6 months - 1 year", "Oracle\n4"], ["6 months - 1 year", "Microsoft\n2"], ["6 months - 1 year", "Bloomberg\n2"], ["6 months - 1 year", "Cohesity\n2"]]}], "problem": "<p>Given the root of a binary tree, find the largest <span data-keyword=\"subtree\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-13\" aria-expanded=\"false\" data-headlessui-state=\"\">subtree</div></div></div></span>, which is also a Binary Search Tree (BST), where the largest means subtree has the largest number of nodes.</p>\n\n<p>A <strong>Binary Search Tree (BST)</strong> is a tree in which all the nodes follow the below-mentioned properties:</p>\n\n<ul>\n\t<li>The left subtree values are less than the value of their parent (root) node's value.</li>\n\t<li>The right subtree values are greater than the value of their parent (root) node's value.</li>\n</ul>\n\n<p><strong>Note:</strong> A subtree must include all of its descendants.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/17/tmp.jpg\" style=\"width: 571px; height: 302px;\"></strong></p>\n\n<pre><strong>Input:</strong> root = [10,5,15,1,8,null,7]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The Largest BST Subtree in this case is the highlighted one. The return value is the subtree's size, which is 3.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> root = [4,2,7,2,3,5,null,2,null,null,null,null,null,1]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you figure out ways to solve it with <code>O(n)</code> time complexity?</p>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "largest-bst-subtree"}