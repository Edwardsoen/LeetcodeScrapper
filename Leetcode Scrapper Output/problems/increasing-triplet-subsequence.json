{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n5"], ["0 - 6 months", "Bloomberg\n3"], ["0 - 6 months", "Facebook\n2"], ["0 - 6 months", "Adobe\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Amazon\n4"], ["1 year - 2 years", "razorpay\n3"]]}], "problem": "<p>Given an integer array <code>nums</code>, return <code>true</code><em> if there exists a triple of indices </em><code>(i, j, k)</code><em> such that </em><code>i &lt; j &lt; k</code><em> and </em><code>nums[i] &lt; nums[j] &lt; nums[k]</code>. If no such indices exists, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Any triplet where i &lt; j &lt; k is valid.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [5,4,3,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> No triplet exists.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [2,1,5,0,4,6]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The triplet (3, 4, 5) is valid because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] == 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you implement a solution that runs in <code>O(n)</code> time complexity and <code>O(1)</code> space complexity?", "relatedTopics": ["Array", "Greedy"], "similarQuestions": [{"questionName": "Longest Increasing Subsequence", "difficulty": "Medium"}, {"questionName": "Count Special Quadruplets", "difficulty": "Easy"}, {"questionName": "Count Good Triplets in an Array", "difficulty": "Hard"}, {"questionName": "Count Increasing Quadruplets", "difficulty": "Hard"}], "problemName": "increasing-triplet-subsequence"}