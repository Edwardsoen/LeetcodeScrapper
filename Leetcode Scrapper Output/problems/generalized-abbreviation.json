{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google"]]}], "problem": "<p>A word's <strong>generalized abbreviation</strong> can be constructed by taking any number of <strong>non-overlapping</strong> and <strong>non-adjacent</strong> <span data-keyword=\"substring-nonempty\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-13\" aria-expanded=\"false\" data-headlessui-state=\"\">substrings</div></div></div></span> and replacing them with their respective lengths.</p>\n\n<ul>\n\t<li>For example, <code>\"abcde\"</code> can be abbreviated into:\n\n\t<ul>\n\t\t<li><code>\"a3e\"</code> (<code>\"bcd\"</code> turned into <code>\"3\"</code>)</li>\n\t\t<li><code>\"1bcd1\"</code> (<code>\"a\"</code> and <code>\"e\"</code> both turned into <code>\"1\"</code>)</li>\n\t\t<li><code>\"5\"</code> (<code>\"abcde\"</code> turned into <code>\"5\"</code>)</li>\n\t\t<li><code>\"abcde\"</code> (no substrings replaced)</li>\n\t</ul>\n\t</li>\n\t<li>However, these abbreviations are <strong>invalid</strong>:\n\t<ul>\n\t\t<li><code>\"23\"</code> (<code>\"ab\"</code> turned into <code>\"2\"</code> and <code>\"cde\"</code> turned into <code>\"3\"</code>) is invalid as the substrings chosen are adjacent.</li>\n\t\t<li><code>\"22de\"</code> (<code>\"ab\"</code> turned into <code>\"2\"</code> and <code>\"bc\"</code> turned into <code>\"2\"</code>) is invalid as the substring chosen overlap.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given a string <code>word</code>, return <em>a list of all the possible <strong>generalized abbreviations</strong> of</em> <code>word</code>. Return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> word = \"word\"\n<strong>Output:</strong> [\"4\",\"3d\",\"2r1\",\"2rd\",\"1o2\",\"1o1d\",\"1or1\",\"1ord\",\"w3\",\"w2d\",\"w1r1\",\"w1rd\",\"wo2\",\"wo1d\",\"wor1\",\"word\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> word = \"a\"\n<strong>Output:</strong> [\"1\",\"a\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 15</code></li>\n\t<li><code>word</code> consists of only lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["String", "Backtracking", "Bit Manipulation"], "similarQuestions": [], "problemName": "generalized-abbreviation"}