{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n3"], ["0 - 6 months", "Amazon\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Intuit\n4"], ["1 year - 2 years", "Microsoft\n2"], ["1 year - 2 years", "Bloomberg\n2"], ["1 year - 2 years", "ByteDance\n2"]]}], "problem": "<p>Given the <code>root</code> of a binary tree, each node in the tree has a distinct value.</p>\n\n<p>After deleting all nodes with a value in <code>to_delete</code>, we are left with a forest (a disjoint union of trees).</p>\n\n<p>Return the roots of the trees in the remaining forest. You may return the result in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/07/01/screen-shot-2019-07-01-at-53836-pm.png\" style=\"width: 237px; height: 150px;\">\n<pre><strong>Input:</strong> root = [1,2,3,4,5,6,7], to_delete = [3,5]\n<strong>Output:</strong> [[1,2,null,4],[6],[7]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> root = [1,2,4,null,3], to_delete = [3]\n<strong>Output:</strong> [[1,2,4]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given tree is at most <code>1000</code>.</li>\n\t<li>Each node has a distinct value between <code>1</code> and <code>1000</code>.</li>\n\t<li><code>to_delete.length &lt;= 1000</code></li>\n\t<li><code>to_delete</code> contains distinct values between <code>1</code> and <code>1000</code>.</li>\n</ul>\n", "relatedTopics": ["Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [{"questionName": "Count Nodes With the Highest Score", "difficulty": "Medium"}], "problemName": "delete-nodes-and-return-forest"}