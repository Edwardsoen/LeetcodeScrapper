{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber"]]}], "problem": "<p>Table: <code>Drivers</code></p>\n\n<pre>+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| driver_id   | int     |\n| join_date   | date    |\n+-------------+---------+\ndriver_id is the primary key for this table.\nEach row of this table contains the driver's ID and the date they joined the Hopper company.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Rides</code></p>\n\n<pre>+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| ride_id      | int     |\n| user_id      | int     |\n| requested_at | date    |\n+--------------+---------+\nride_id is the primary key for this table.\nEach row of this table contains the ID of a ride, the user's ID that requested it, and the day they requested it.\nThere may be some ride requests in this table that were not accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>AcceptedRides</code></p>\n\n<pre>+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| ride_id       | int     |\n| driver_id     | int     |\n| ride_distance | int     |\n| ride_duration | int     |\n+---------------+---------+\nride_id is the primary key for this table.\nEach row of this table contains some information about an accepted ride.\nIt is guaranteed that each accepted ride exists in the Rides table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to compute the <code>average_ride_distance</code> and <code>average_ride_duration</code> of every 3-month window starting from <strong>January - March 2020</strong> to <strong>October - December 2020</strong>. Round <code>average_ride_distance</code> and <code>average_ride_duration</code> to the nearest <strong>two decimal places</strong>.</p>\n\n<p>The <code>average_ride_distance</code> is calculated by summing up the total <code>ride_distance</code> values from the three months and dividing it by <code>3</code>. The <code>average_ride_duration</code> is calculated in a similar way.</p>\n\n<p>Return the result table ordered by <code>month</code> in ascending order, where <code>month</code> is the starting month's number (January is <code>1</code>, February is <code>2</code>, etc.).</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> \nDrivers table:\n+-----------+------------+\n| driver_id | join_date  |\n+-----------+------------+\n| 10        | 2019-12-10 |\n| 8         | 2020-1-13  |\n| 5         | 2020-2-16  |\n| 7         | 2020-3-8   |\n| 4         | 2020-5-17  |\n| 1         | 2020-10-24 |\n| 6         | 2021-1-5   |\n+-----------+------------+\nRides table:\n+---------+---------+--------------+\n| ride_id | user_id | requested_at |\n+---------+---------+--------------+\n| 6       | 75      | 2019-12-9    |\n| 1       | 54      | 2020-2-9     |\n| 10      | 63      | 2020-3-4     |\n| 19      | 39      | 2020-4-6     |\n| 3       | 41      | 2020-6-3     |\n| 13      | 52      | 2020-6-22    |\n| 7       | 69      | 2020-7-16    |\n| 17      | 70      | 2020-8-25    |\n| 20      | 81      | 2020-11-2    |\n| 5       | 57      | 2020-11-9    |\n| 2       | 42      | 2020-12-9    |\n| 11      | 68      | 2021-1-11    |\n| 15      | 32      | 2021-1-17    |\n| 12      | 11      | 2021-1-19    |\n| 14      | 18      | 2021-1-27    |\n+---------+---------+--------------+\nAcceptedRides table:\n+---------+-----------+---------------+---------------+\n| ride_id | driver_id | ride_distance | ride_duration |\n+---------+-----------+---------------+---------------+\n| 10      | 10        | 63            | 38            |\n| 13      | 10        | 73            | 96            |\n| 7       | 8         | 100           | 28            |\n| 17      | 7         | 119           | 68            |\n| 20      | 1         | 121           | 92            |\n| 5       | 7         | 42            | 101           |\n| 2       | 4         | 6             | 38            |\n| 11      | 8         | 37            | 43            |\n| 15      | 8         | 108           | 82            |\n| 12      | 8         | 38            | 34            |\n| 14      | 1         | 90            | 74            |\n+---------+-----------+---------------+---------------+\n<strong>Output:</strong> \n+-------+-----------------------+-----------------------+\n| month | average_ride_distance | average_ride_duration |\n+-------+-----------------------+-----------------------+\n| 1     | 21.00                 | 12.67                 |\n| 2     | 21.00                 | 12.67                 |\n| 3     | 21.00                 | 12.67                 |\n| 4     | 24.33                 | 32.00                 |\n| 5     | 57.67                 | 41.33                 |\n| 6     | 97.33                 | 64.00                 |\n| 7     | 73.00                 | 32.00                 |\n| 8     | 39.67                 | 22.67                 |\n| 9     | 54.33                 | 64.33                 |\n| 10    | 56.33                 | 77.00                 |\n+-------+-----------------------+-----------------------+\n<strong>Explanation:</strong> \nBy the end of January --&gt; average_ride_distance = (0+0+63)/3=21, average_ride_duration = (0+0+38)/3=12.67\nBy the end of February --&gt; average_ride_distance = (0+63+0)/3=21, average_ride_duration = (0+38+0)/3=12.67\nBy the end of March --&gt; average_ride_distance = (63+0+0)/3=21, average_ride_duration = (38+0+0)/3=12.67\nBy the end of April --&gt; average_ride_distance = (0+0+73)/3=24.33, average_ride_duration = (0+0+96)/3=32.00\nBy the end of May --&gt; average_ride_distance = (0+73+100)/3=57.67, average_ride_duration = (0+96+28)/3=41.33\nBy the end of June --&gt; average_ride_distance = (73+100+119)/3=97.33, average_ride_duration = (96+28+68)/3=64.00\nBy the end of July --&gt; average_ride_distance = (100+119+0)/3=73.00, average_ride_duration = (28+68+0)/3=32.00\nBy the end of August --&gt; average_ride_distance = (119+0+0)/3=39.67, average_ride_duration = (68+0+0)/3=22.67\nBy the end of Septemeber --&gt; average_ride_distance = (0+0+163)/3=54.33, average_ride_duration = (0+0+193)/3=64.33\nBy the end of October --&gt; average_ride_distance = (0+163+6)/3=56.33, average_ride_duration = (0+193+38)/3=77.00\n</pre>\n", "relatedTopics": ["Database"], "similarQuestions": [], "problemName": "hopper-company-queries-iii"}