{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Spotify"]]}], "problem": "<p>Table: <code>Listens</code></p>\n\n<pre>+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| user_id     | int     |\n| song_id     | int     |\n| day         | date    |\n+-------------+---------+\nThere is no primary key for this table. It may contain duplicates.\nEach row of this table indicates that the user user_id listened to the song song_id on the day day.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Friendship</code></p>\n\n<pre>+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user1_id      | int     |\n| user2_id      | int     |\n+---------------+---------+\n(user1_id, user2_id) is the primary key for this table.\nEach row of this table indicates that the users user1_id and user2_id are friends.\nNote that user1_id &lt; user2_id.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to recommend friends to Leetcodify users. We recommend user <code>x</code> to user <code>y</code> if:</p>\n\n<ul>\n\t<li>Users <code>x</code> and <code>y</code> are not friends, and</li>\n\t<li>Users <code>x</code> and <code>y</code> listened to the same three or more different songs <strong>on the same day</strong>.</li>\n</ul>\n\n<p>Note that friend recommendations are <strong>unidirectional</strong>, meaning if user <code>x</code> and user <code>y</code> should be recommended to each other, the result table should have both user <code>x</code> recommended to user <code>y</code> and user <code>y</code> recommended to user <code>x</code>. Also, note that the result table should not contain duplicates (i.e., user <code>y</code> should not be recommended to user <code>x</code> multiple times.).</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> \nListens table:\n+---------+---------+------------+\n| user_id | song_id | day        |\n+---------+---------+------------+\n| 1       | 10      | 2021-03-15 |\n| 1       | 11      | 2021-03-15 |\n| 1       | 12      | 2021-03-15 |\n| 2       | 10      | 2021-03-15 |\n| 2       | 11      | 2021-03-15 |\n| 2       | 12      | 2021-03-15 |\n| 3       | 10      | 2021-03-15 |\n| 3       | 11      | 2021-03-15 |\n| 3       | 12      | 2021-03-15 |\n| 4       | 10      | 2021-03-15 |\n| 4       | 11      | 2021-03-15 |\n| 4       | 13      | 2021-03-15 |\n| 5       | 10      | 2021-03-16 |\n| 5       | 11      | 2021-03-16 |\n| 5       | 12      | 2021-03-16 |\n+---------+---------+------------+\nFriendship table:\n+----------+----------+\n| user1_id | user2_id |\n+----------+----------+\n| 1        | 2        |\n+----------+----------+\n<strong>Output:</strong> \n+---------+----------------+\n| user_id | recommended_id |\n+---------+----------------+\n| 1       | 3              |\n| 2       | 3              |\n| 3       | 1              |\n| 3       | 2              |\n+---------+----------------+\n<strong>Explanation:</strong> \nUsers 1 and 2 listened to songs 10, 11, and 12 on the same day, but they are already friends.\nUsers 1 and 3 listened to songs 10, 11, and 12 on the same day. Since they are not friends, we recommend them to each other.\nUsers 1 and 4 did not listen to the same three songs.\nUsers 1 and 5 listened to songs 10, 11, and 12, but on different days.\n\nSimilarly, we can see that users 2 and 3 listened to songs 10, 11, and 12 on the same day and are not friends, so we recommend them to each other.\n</pre>\n", "relatedTopics": ["Database"], "similarQuestions": [], "problemName": "leetcodify-friends-recommendations"}