{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Google\n4"], ["0 - 6 months", "Amazon\n3"], ["0 - 6 months", "TikTok\n3"], ["0 - 6 months", "Apple\n2"], ["0 - 6 months", "TuSimple\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n8"], ["6 months - 1 year", "Adobe\n5"], ["6 months - 1 year", "Facebook\n4"], ["6 months - 1 year", "Bloomberg\n4"], ["6 months - 1 year", "Oracle\n4"], ["6 months - 1 year", "VMware\n2"], ["6 months - 1 year", "Visa\n2"], ["6 months - 1 year", "Expedia\n2"], ["6 months - 1 year", "Infosys\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "ByteDance\n6"], ["1 year - 2 years", "Twitter\n5"], ["1 year - 2 years", "Walmart Global Tech\n3"], ["1 year - 2 years", "ServiceNow\n3"], ["1 year - 2 years", "Samsung\n3"], ["1 year - 2 years", "Salesforce\n2"], ["1 year - 2 years", "Splunk\n2"], ["1 year - 2 years", "MakeMyTrip\n2"], ["1 year - 2 years", "ZScaler\n2"], ["1 year - 2 years", "Huawei\n2"], ["1 year - 2 years", "Shopee\n2"], ["1 year - 2 years", "Deutsche Bank\n2"], ["1 year - 2 years", "HRT\n2"]]}], "problem": "<p>Given an integer array <code>nums</code>, return <em>the length of the longest <strong>strictly increasing </strong></em><span data-keyword=\"subsequence-array\" class=\" cursor-pointer relative text-dark-blue-s text-sm\"><div class=\"popover-wrapper inline-block\" data-headlessui-state=\"\"><div><div id=\"headlessui-popover-button-7\" aria-expanded=\"false\" data-headlessui-state=\"\"><em><strong>subsequence</strong></em></div></div></div></span>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [10,9,2,5,3,7,101,18]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [0,1,0,3,2,3]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [7,7,7,7,7,7,7]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2500</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><b>Follow up:</b>&nbsp;Can you come up with an algorithm that runs in&nbsp;<code>O(n log(n))</code> time complexity?</p>\n", "relatedTopics": ["Array", "Binary Search", "Dynamic Programming"], "similarQuestions": [], "problemName": "longest-increasing-subsequence"}