{"tags": [], "problem": "<p>You have a water dispenser that can dispense cold, warm, and hot water. Every second, you can either fill up <code>2</code> cups with <strong>different</strong> types of water, or <code>1</code> cup of any type of water.</p>\n\n<p>You are given a <strong>0-indexed</strong> integer array <code>amount</code> of length <code>3</code> where <code>amount[0]</code>, <code>amount[1]</code>, and <code>amount[2]</code> denote the number of cold, warm, and hot water cups you need to fill respectively. Return <em>the <strong>minimum</strong> number of seconds needed to fill up all the cups</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> amount = [1,4,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One way to fill up the cups is:\nSecond 1: Fill up a cold cup and a warm cup.\nSecond 2: Fill up a warm cup and a hot cup.\nSecond 3: Fill up a warm cup and a hot cup.\nSecond 4: Fill up a warm cup.\nIt can be proven that 4 is the minimum number of seconds needed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> amount = [5,4,4]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> One way to fill up the cups is:\nSecond 1: Fill up a cold cup, and a hot cup.\nSecond 2: Fill up a cold cup, and a warm cup.\nSecond 3: Fill up a cold cup, and a warm cup.\nSecond 4: Fill up a warm cup, and a hot cup.\nSecond 5: Fill up a cold cup, and a hot cup.\nSecond 6: Fill up a cold cup, and a warm cup.\nSecond 7: Fill up a hot cup.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> amount = [5,0,0]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Every second, we fill up a cold cup.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>amount.length == 3</code></li>\n\t<li><code>0 &lt;= amount[i] &lt;= 100</code></li>\n</ul>\n", "relatedTopics": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"], "similarQuestions": [{"questionName": "Construct Target Array With Multiple Sums", "difficulty": "Hard"}, {"questionName": "Maximum Score From Removing Stones", "difficulty": "Medium"}, {"questionName": "Maximum Running Time of N Computers", "difficulty": "Hard"}, {"questionName": "Minimum Cost to Make Array Equal", "difficulty": "Hard"}], "problemName": "minimum-amount-of-time-to-fill-cups"}