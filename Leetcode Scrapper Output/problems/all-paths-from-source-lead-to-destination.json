{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Bloomberg\n4"], ["1 year - 2 years", "Google"]]}], "problem": "<p>Given the <code>edges</code> of a directed graph where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates there is an edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>, and two nodes <code>source</code> and <code>destination</code> of this graph, determine whether or not all paths starting from <code>source</code> eventually, end at <code>destination</code>, that is:</p>\n\n<ul>\n\t<li>At least one path exists from the <code>source</code> node to the <code>destination</code> node</li>\n\t<li>If a path exists from the <code>source</code> node to a node with no outgoing edges, then that node is equal to <code>destination</code>.</li>\n\t<li>The number of possible paths from <code>source</code> to <code>destination</code> is a finite number.</li>\n</ul>\n\n<p>Return <code>true</code> if and only if all roads from <code>source</code> lead to <code>destination</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/16/485_example_1.png\" style=\"width: 200px; height: 208px;\">\n<pre><strong>Input:</strong> n = 3, edges = [[0,1],[0,2]], source = 0, destination = 2\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is possible to reach and get stuck on both node 1 and node 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/16/485_example_2.png\" style=\"width: 200px; height: 230px;\">\n<pre><strong>Input:</strong> n = 4, edges = [[0,1],[0,3],[1,2],[2,1]], source = 0, destination = 3\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We have two possibilities: to end at node 3, or to loop over node 1 and node 2 indefinitely.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/03/16/485_example_3.png\" style=\"width: 200px; height: 183px;\">\n<pre><strong>Input:</strong> n = 4, edges = [[0,1],[0,2],[1,3],[2,3]], source = 0, destination = 3\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= edges.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>edges.length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>0 &lt;= source &lt;= n - 1</code></li>\n\t<li><code>0 &lt;= destination &lt;= n - 1</code></li>\n\t<li>The given graph may have self-loops and parallel edges.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "all-paths-from-source-lead-to-destination"}