{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "DoorDash\n17"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n6"], ["6 months - 1 year", "Coinbase\n3"], ["6 months - 1 year", "Airbnb\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google\n4"], ["1 year - 2 years", "Microsoft\n4"]]}], "problem": "<p>You are asked to design a file system&nbsp;that allows you to create new paths and associate them with different values.</p>\n\n<p>The format of a path is&nbsp;one or more concatenated strings of the form:&nbsp;<code>/</code> followed by one or more lowercase English letters. For example, \"<code>/leetcode\"</code>&nbsp;and \"<code>/leetcode/problems\"</code>&nbsp;are valid paths while an empty&nbsp;string <code>\"\"</code> and <code>\"/\"</code>&nbsp;are not.</p>\n\n<p>Implement the&nbsp;<code>FileSystem</code> class:</p>\n\n<ul>\n\t<li><code>bool createPath(string path, int value)</code>&nbsp;Creates a new <code>path</code> and associates a <code>value</code> to it if possible and returns <code>true</code>.&nbsp;Returns <code>false</code>&nbsp;if the path <strong>already exists</strong> or its parent path <strong>doesn't exist</strong>.</li>\n\t<li><code>int get(string path)</code>&nbsp;Returns the value associated with <code>path</code> or returns&nbsp;<code>-1</code>&nbsp;if the path doesn't exist.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> \n[\"FileSystem\",\"createPath\",\"get\"]\n[[],[\"/a\",1],[\"/a\"]]\n<strong>Output:</strong> \n[null,true,1]\n<strong>Explanation:</strong> \nFileSystem fileSystem = new FileSystem();\n\nfileSystem.createPath(\"/a\", 1); // return true\nfileSystem.get(\"/a\"); // return 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> \n[\"FileSystem\",\"createPath\",\"createPath\",\"get\",\"createPath\",\"get\"]\n[[],[\"/leet\",1],[\"/leet/code\",2],[\"/leet/code\"],[\"/c/d\",1],[\"/c\"]]\n<strong>Output:</strong> \n[null,true,true,2,false,-1]\n<strong>Explanation:</strong> \nFileSystem fileSystem = new FileSystem();\n\nfileSystem.createPath(\"/leet\", 1); // return true\nfileSystem.createPath(\"/leet/code\", 2); // return true\nfileSystem.get(\"/leet/code\"); // return 2\nfileSystem.createPath(\"/c/d\", 1); // return false because the parent path \"/c\" doesn't exist.\nfileSystem.get(\"/c\"); // return -1 because this path doesn't exist.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= path.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= value &lt;= 10<sup>9</sup></code></li>\n\t<li>Each <code>path</code> is <strong>valid</strong> and consists of lowercase English letters and <code>'/'</code>.</li>\n\t<li>At most <code>10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>createPath</code> and <code>get</code>.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "design-file-system"}