{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Bloomberg\n3"], ["0 - 6 months", "Apple\n3"], ["0 - 6 months", "Amazon\n2"], ["0 - 6 months", "Microsoft\n2"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Yahoo\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Facebook\n3"], ["6 months - 1 year", "Adobe\n2"], ["6 months - 1 year", "Zynga\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Uber\n5"], ["1 year - 2 years", "Goldman Sachs\n2"], ["1 year - 2 years", "Pocket Gems"]]}], "problem": "<p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> haystack = \"sadbutsad\", needle = \"sad\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \"sad\" occurs at index 0 and 6.\nThe first occurrence is at index 0, so we return 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> haystack = \"leetcode\", needle = \"leeto\"\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> \"leeto\" did not occur in \"leetcode\", so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= haystack.length, needle.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li>\n</ul>\n", "relatedTopics": ["Two Pointers", "String", "String Matching"], "similarQuestions": [{"questionName": "Shortest Palindrome", "difficulty": "Hard"}, {"questionName": "Repeated Substring Pattern", "difficulty": "Easy"}], "problemName": "find-the-index-of-the-first-occurrence-in-a-string"}