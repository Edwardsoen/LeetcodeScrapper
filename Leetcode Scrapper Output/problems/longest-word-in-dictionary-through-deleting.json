{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n3"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Goldman Sachs\n6"], ["1 year - 2 years", "Bloomberg\n4"], ["1 year - 2 years", "Microsoft\n2"], ["1 year - 2 years", "Uber\n2"]]}], "problem": "<p>Given a string <code>s</code> and a string array <code>dictionary</code>, return <em>the longest string in the dictionary that can be formed by deleting some of the given string characters</em>. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"abpcplea\", dictionary = [\"ale\",\"apple\",\"monkey\",\"plea\"]\n<strong>Output:</strong> \"apple\"\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"abpcplea\", dictionary = [\"a\",\"b\",\"c\"]\n<strong>Output:</strong> \"a\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= dictionary.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= dictionary[i].length &lt;= 1000</code></li>\n\t<li><code>s</code> and <code>dictionary[i]</code> consist of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["Array", "Two Pointers", "String", "Sorting"], "similarQuestions": [{"questionName": "Longest Word in Dictionary", "difficulty": "Medium"}], "problemName": "longest-word-in-dictionary-through-deleting"}