{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n7"], ["0 - 6 months", "Yandex\n2"], ["0 - 6 months", "Redfin\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n10"], ["6 months - 1 year", "Apple\n4"], ["6 months - 1 year", "Adobe\n4"], ["6 months - 1 year", "Facebook\n3"], ["6 months - 1 year", "Yahoo\n3"], ["6 months - 1 year", "Bolt\n3"], ["6 months - 1 year", "Uber\n2"], ["6 months - 1 year", "Google\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Snapchat\n7"], ["1 year - 2 years", "Bloomberg\n7"], ["1 year - 2 years", "Paypal\n3"], ["1 year - 2 years", "Oracle\n3"], ["1 year - 2 years", "Expedia\n3"], ["1 year - 2 years", "Goldman Sachs\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Splunk\n2"], ["1 year - 2 years", "C3 IoT\n2"], ["1 year - 2 years", "Visa\n2"], ["1 year - 2 years", "Media.net\n2"]]}], "problem": "<p>Given two strings <code>s</code> and <code>p</code>, return <em>an array of all the start indices of </em><code>p</code><em>'s anagrams in </em><code>s</code>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"cbaebabacd\", p = \"abc\"\n<strong>Output:</strong> [0,6]\n<strong>Explanation:</strong>\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"abab\", p = \"ab\"\n<strong>Output:</strong> [0,1,2]\n<strong>Explanation:</strong>\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, p.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> and <code>p</code> consist of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "String", "Sliding Window"], "similarQuestions": [{"questionName": "Valid Anagram", "difficulty": "Easy"}, {"questionName": "Permutation in String", "difficulty": "Medium"}], "problemName": "find-all-anagrams-in-a-string"}