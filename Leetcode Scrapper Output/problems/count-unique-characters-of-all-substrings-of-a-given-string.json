{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Amazon\n68"], ["6 months - 1 year", "Google\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "ForUsAll"]]}], "problem": "<p>Let's define a function <code>countUniqueChars(s)</code> that returns the number of unique characters on <code>s</code>.</p>\n\n<ul>\n\t<li>For example, calling <code>countUniqueChars(s)</code> if <code>s = \"LEETCODE\"</code> then <code>\"L\"</code>, <code>\"T\"</code>, <code>\"C\"</code>, <code>\"O\"</code>, <code>\"D\"</code> are the unique characters since they appear only once in <code>s</code>, therefore <code>countUniqueChars(s) = 5</code>.</li>\n</ul>\n\n<p>Given a string <code>s</code>, return the sum of <code>countUniqueChars(t)</code> where <code>t</code> is a substring of <code>s</code>. The test cases are generated such that the answer fits in a 32-bit integer.</p>\n\n<p>Notice that some substrings can be repeated so in this case you have to count the repeated ones too.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"ABC\"\n<strong>Output:</strong> 10\n<strong>Explanation: </strong>All possible substrings are: \"A\",\"B\",\"C\",\"AB\",\"BC\" and \"ABC\".\nEvery substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"ABA\"\n<strong>Output:</strong> 8\n<strong>Explanation: </strong>The same as example 1, except <code>countUniqueChars</code>(\"ABA\") = 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"LEETCODE\"\n<strong>Output:</strong> 92\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of uppercase English letters only.</li>\n</ul>\n", "relatedTopics": ["Hash Table", "String", "Dynamic Programming"], "similarQuestions": [{"questionName": "Total Appeal of A String", "difficulty": "Hard"}], "problemName": "count-unique-characters-of-all-substrings-of-a-given-string"}