{"tags": [{"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Google\n5"]]}], "problem": "<p>You are given an <code>m x n</code> binary matrix <code>image</code> where <code>0</code> represents a white pixel and <code>1</code> represents a black pixel.</p>\n\n<p>The black pixels are connected (i.e., there is only one black region). Pixels are connected horizontally and vertically.</p>\n\n<p>Given two integers <code>x</code> and <code>y</code> that represents the location of one of the black pixels, return <em>the area of the smallest (axis-aligned) rectangle that encloses all black pixels</em>.</p>\n\n<p>You must write an algorithm with less than <code>O(mn)</code> runtime complexity</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/14/pixel-grid.jpg\" style=\"width: 333px; height: 253px;\">\n<pre><strong>Input:</strong> image = [[\"0\",\"0\",\"1\",\"0\"],[\"0\",\"1\",\"1\",\"0\"],[\"0\",\"1\",\"0\",\"0\"]], x = 0, y = 2\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> image = [[\"1\"]], x = 0, y = 0\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == image.length</code></li>\n\t<li><code>n == image[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>image[i][j]</code> is either <code>'0'</code> or <code>'1'</code>.</li>\n\t<li><code>0 &lt;= x &lt; m</code></li>\n\t<li><code>0 &lt;= y &lt; n</code></li>\n\t<li><code>image[x][y] == '1'.</code></li>\n\t<li>The black pixels in the <code>image</code> only form <strong>one component</strong>.</li>\n</ul>\n", "relatedTopics": [], "similarQuestions": [], "problemName": "smallest-rectangle-enclosing-black-pixels"}