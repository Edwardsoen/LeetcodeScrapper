{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Apple\n4"], ["0 - 6 months", "Amazon\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "LinkedIn\n8"], ["6 months - 1 year", "Facebook\n5"], ["6 months - 1 year", "Yahoo\n4"], ["6 months - 1 year", "Google\n3"], ["6 months - 1 year", "Rubrik\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Microsoft\n6"], ["1 year - 2 years", "Salesforce\n6"], ["1 year - 2 years", "Bloomberg\n2"], ["1 year - 2 years", "Oracle\n2"], ["1 year - 2 years", "Alibaba"]]}], "problem": "<p>Given a string <code>s</code> containing only three types of characters: <code>'('</code>, <code>')'</code> and <code>'*'</code>, return <code>true</code> <em>if</em> <code>s</code> <em>is <strong>valid</strong></em>.</p>\n\n<p>The following rules define a <strong>valid</strong> string:</p>\n\n<ul>\n\t<li>Any left parenthesis <code>'('</code> must have a corresponding right parenthesis <code>')'</code>.</li>\n\t<li>Any right parenthesis <code>')'</code> must have a corresponding left parenthesis <code>'('</code>.</li>\n\t<li>Left parenthesis <code>'('</code> must go before the corresponding right parenthesis <code>')'</code>.</li>\n\t<li><code>'*'</code> could be treated as a single right parenthesis <code>')'</code> or a single left parenthesis <code>'('</code> or an empty string <code>\"\"</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"()\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"(*)\"\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"(*))\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s[i]</code> is <code>'('</code>, <code>')'</code> or <code>'*'</code>.</li>\n</ul>\n", "relatedTopics": ["String", "Dynamic Programming", "Stack", "Greedy"], "similarQuestions": [{"questionName": "Special Binary String", "difficulty": "Hard"}, {"questionName": "Check if a Parentheses String Can Be Valid", "difficulty": "Medium"}], "problemName": "valid-parenthesis-string"}