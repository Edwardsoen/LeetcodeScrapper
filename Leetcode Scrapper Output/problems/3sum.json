{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n16"], ["0 - 6 months", "Facebook\n6"], ["0 - 6 months", "Bloomberg\n6"], ["0 - 6 months", "Adobe\n5"], ["0 - 6 months", "Apple\n5"], ["0 - 6 months", "Microsoft\n4"], ["0 - 6 months", "Uber\n3"], ["0 - 6 months", "Google\n2"], ["0 - 6 months", "Yahoo\n2"], ["0 - 6 months", "Walmart Global Tech\n2"], ["0 - 6 months", "MakeMyTrip\n2"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "TikTok\n6"], ["6 months - 1 year", "Goldman Sachs\n4"], ["6 months - 1 year", "Salesforce\n3"], ["6 months - 1 year", "Cisco\n3"], ["6 months - 1 year", "Tesla\n3"], ["6 months - 1 year", "Infosys\n3"], ["6 months - 1 year", "Qualtrics\n2"], ["6 months - 1 year", "LinkedIn\n2"], ["6 months - 1 year", "VMware\n2"], ["6 months - 1 year", "Visa\n2"], ["6 months - 1 year", "ByteDance\n2"], ["6 months - 1 year", "Oracle\n2"], ["6 months - 1 year", "Morgan Stanley\n2"], ["6 months - 1 year", "American Express\n2"], ["6 months - 1 year", "Intel\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "eBay\n4"], ["1 year - 2 years", "Paypal\n4"], ["1 year - 2 years", "Rubrik\n4"], ["1 year - 2 years", "Intuit\n3"], ["1 year - 2 years", "Flipkart\n3"], ["1 year - 2 years", "IBM\n3"], ["1 year - 2 years", "SAP\n2"], ["1 year - 2 years", "Swiggy\n2"], ["1 year - 2 years", "C3 IoT\n2"], ["1 year - 2 years", "Arcesium\n2"], ["1 year - 2 years", "Works Applications"], ["1 year - 2 years", "Wix"]]}], "problem": "<p>Given an integer array nums, return all the triplets <code>[nums[i], nums[j], nums[k]]</code> such that <code>i != j</code>, <code>i != k</code>, and <code>j != k</code>, and <code>nums[i] + nums[j] + nums[k] == 0</code>.</p>\n\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]\n<strong>Output:</strong> [[-1,-1,2],[-1,0,1]]\n<strong>Explanation:</strong> \nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> nums = [0,1,1]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The only possible triplet does not sum up to 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> nums = [0,0,0]\n<strong>Output:</strong> [[0,0,0]]\n<strong>Explanation:</strong> The only possible triplet sums up to 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 3000</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "relatedTopics": ["Array", "Two Pointers", "Sorting"], "similarQuestions": [], "problemName": "3sum"}