{"tags": [{"duration": "0 - 6 months", "companies": [["0 - 6 months", "Amazon\n3"]]}, {"duration": "6 months - 1 year", "companies": [["6 months - 1 year", "Microsoft\n5"], ["6 months - 1 year", "Uber\n3"], ["6 months - 1 year", "Facebook\n2"], ["6 months - 1 year", "Bloomberg\n2"]]}, {"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "Google\n3"], ["1 year - 2 years", "Apple\n2"], ["1 year - 2 years", "VMware\n2"], ["1 year - 2 years", "Audible\n2"], ["1 year - 2 years", "Walmart Global Tech\n2"], ["1 year - 2 years", "Qualcomm\n2"]]}], "problem": "<p>The <strong>boundary</strong> of a binary tree is the concatenation of the <strong>root</strong>, the <strong>left boundary</strong>, the <strong>leaves</strong> ordered from left-to-right, and the <strong>reverse order</strong> of the <strong>right boundary</strong>.</p>\n\n<p>The <strong>left boundary</strong> is the set of nodes defined by the following:</p>\n\n<ul>\n\t<li>The root node's left child is in the left boundary. If the root does not have a left child, then the left boundary is <strong>empty</strong>.</li>\n\t<li>If a node in the left boundary and has a left child, then the left child is in the left boundary.</li>\n\t<li>If a node is in the left boundary, has <strong>no</strong> left child, but has a right child, then the right child is in the left boundary.</li>\n\t<li>The leftmost leaf is <strong>not</strong> in the left boundary.</li>\n</ul>\n\n<p>The <strong>right boundary</strong> is similar to the <strong>left boundary</strong>, except it is the right side of the root's right subtree. Again, the leaf is <strong>not</strong> part of the <strong>right boundary</strong>, and the <strong>right boundary</strong> is empty if the root does not have a right child.</p>\n\n<p>The <strong>leaves</strong> are nodes that do not have any children. For this problem, the root is <strong>not</strong> a leaf.</p>\n\n<p>Given the <code>root</code> of a binary tree, return <em>the values of its <strong>boundary</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/11/boundary1.jpg\" style=\"width: 299px; height: 290px;\">\n<pre><strong>Input:</strong> root = [1,null,2,3,4]\n<strong>Output:</strong> [1,3,4,2]\n<b>Explanation:</b>\n- The left boundary is empty because the root does not have a left child.\n- The right boundary follows the path starting from the root's right child 2 -&gt; 4.\n  4 is a leaf, so the right boundary is [2].\n- The leaves from left to right are [3,4].\nConcatenating everything results in [1] + [] + [3,4] + [2] = [1,3,4,2].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/11/boundary2.jpg\" style=\"width: 599px; height: 411px;\">\n<pre><strong>Input:</strong> root = [1,2,3,4,5,6,null,null,null,7,8,9,10]\n<strong>Output:</strong> [1,2,4,7,8,9,10,6,3]\n<b>Explanation:</b>\n- The left boundary follows the path starting from the root's left child 2 -&gt; 4.\n  4 is a leaf, so the left boundary is [2].\n- The right boundary follows the path starting from the root's right child 3 -&gt; 6 -&gt; 10.\n  10 is a leaf, so the right boundary is [3,6], and in reverse order is [6,3].\n- The leaves from left to right are [4,7,8,9,10].\nConcatenating everything results in [1] + [2] + [4,7,8,9,10] + [6,3] = [1,2,4,7,8,9,10,6,3].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n", "relatedTopics": ["Tree", "Depth-First Search", "Binary Tree"], "similarQuestions": [{"questionName": "Binary Tree Right Side View", "difficulty": "Medium"}], "problemName": "boundary-of-binary-tree"}