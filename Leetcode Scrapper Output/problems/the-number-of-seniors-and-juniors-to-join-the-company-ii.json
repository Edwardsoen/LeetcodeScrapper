{"tags": [], "problem": "<p>Table: <code>Candidates</code></p>\n\n<pre>+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| employee_id | int  |\n| experience  | enum |\n| salary      | int  |\n+-------------+------+\nemployee_id is the primary key column for this table.\nexperience is an enum with one of the values ('Senior', 'Junior').\nEach row of this table indicates the id of a candidate, their monthly salary, and their experience.\nThe salary of each candidate is guaranteed to be <strong>unique</strong>.</pre>\n\n<p>&nbsp;</p>\n\n<p>A company wants to hire new employees. The budget of the company for the salaries is <code>$70000</code>. The company's criteria for hiring are:</p>\n\n<ol>\n\t<li>Keep hiring the senior with the smallest salary until you cannot hire any more seniors.</li>\n\t<li>Use the remaining budget to hire the junior with the smallest salary.</li>\n\t<li>Keep hiring the junior with the smallest salary until you cannot hire any more juniors.</li>\n</ol>\n\n<p>Write an SQL query to find the ids of seniors and juniors hired under the mentioned criteria.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong>\nCandidates table:\n+-------------+------------+--------+\n| employee_id | experience | salary |\n+-------------+------------+--------+\n| 1           | Junior     | 10000  |\n| 9           | Junior     | 15000  |\n| 2           | Senior     | 20000  |\n| 11          | Senior     | 16000  |\n| 13          | Senior     | 50000  |\n| 4           | Junior     | 40000  |\n+-------------+------------+--------+\n<strong>Output:</strong> \n+-------------+\n| employee_id |\n+-------------+\n| 11          |\n| 2           |\n| 1           |\n| 9           |\n+-------------+\n<strong>Explanation:</strong> \nWe can hire 2 seniors with IDs (11, 2). Since the budget is $70000 and the sum of their salaries is $36000, we still have $34000 but they are not enough to hire the senior candidate with ID 13.\nWe can hire 2 juniors with IDs (1, 9). Since the remaining budget is $34000 and the sum of their salaries is $25000, we still have $9000 but they are not enough to hire the junior candidate with ID 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong>\nCandidates table:\n+-------------+------------+--------+\n| employee_id | experience | salary |\n+-------------+------------+--------+\n| 1           | Junior     | 25000  |\n| 9           | Junior     | 10000  |\n| 2           | Senior     | 85000  |\n| 11          | Senior     | 80000  |\n| 13          | Senior     | 90000  |\n| 4           | Junior     | 30000  |\n+-------------+------------+--------+\n<strong>Output:</strong> \n+-------------+\n| employee_id |\n+-------------+\n| 9           |\n| 1           |\n| 4           |\n+-------------+\n<strong>Explanation:</strong> \nWe cannot hire any seniors with the current budget as we need at least $80000 to hire one senior.\nWe can hire all three juniors with the remaining budget.\n</pre>\n", "relatedTopics": ["Database"], "similarQuestions": [], "problemName": "the-number-of-seniors-and-juniors-to-join-the-company-ii"}