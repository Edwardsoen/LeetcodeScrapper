{"tags": [{"duration": "1 year - 2 years", "companies": [["1 year - 2 years", "DE Shaw"]]}], "problem": "<p>You are given a string <code>s</code> consisting of only lowercase English letters. In one operation, you can:</p>\n\n<ul>\n\t<li>Delete <strong>the entire string</strong> <code>s</code>, or</li>\n\t<li>Delete the <strong>first</strong> <code>i</code> letters of <code>s</code> if the first <code>i</code> letters of <code>s</code> are <strong>equal</strong> to the following <code>i</code> letters in <code>s</code>, for any <code>i</code> in the range <code>1 &lt;= i &lt;= s.length / 2</code>.</li>\n</ul>\n\n<p>For example, if <code>s = \"ababc\"</code>, then in one operation, you could delete the first two letters of <code>s</code> to get <code>\"abc\"</code>, since the first two letters of <code>s</code> and the following two letters of <code>s</code> are both equal to <code>\"ab\"</code>.</p>\n\n<p>Return <em>the <strong>maximum</strong> number of operations needed to delete all of </em><code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"abcabcdabc\"\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\n- Delete the first 3 letters (\"abc\") since the next 3 letters are equal. Now, s = \"abcdabc\".\n- Delete all the letters.\nWe used 2 operations so return 2. It can be proven that 2 is the maximum number of operations needed.\nNote that in the second operation we cannot delete \"abc\" again because the next occurrence of \"abc\" does not happen in the next 3 letters.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"aaabaab\"\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\n- Delete the first letter (\"a\") since the next letter is equal. Now, s = \"aabaab\".\n- Delete the first 3 letters (\"aab\") since the next 3 letters are equal. Now, s = \"aab\".\n- Delete the first letter (\"a\") since the next letter is equal. Now, s = \"ab\".\n- Delete all the letters.\nWe used 4 operations so return 4. It can be proven that 4 is the maximum number of operations needed.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"aaaaa\"\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> In each operation, we can delete the first letter of s.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 4000</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n", "relatedTopics": ["String", "Dynamic Programming", "Rolling Hash", "String Matching", "Hash Function"], "similarQuestions": [{"questionName": "Shortest Palindrome", "difficulty": "Hard"}, {"questionName": "Longest Happy Prefix", "difficulty": "Hard"}, {"questionName": "Remove All Occurrences of a Substring", "difficulty": "Medium"}], "problemName": "maximum-deletions-on-a-string"}